{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'],\n// TODO: push isn't a valid type?\n// ['push', 'push'],\n['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardReadWrite'], ['clipboard-write', 'clipboardReadWrite'], ['payment-handler', 'paymentHandler'], ['persistent-storage', 'durableStorage'], ['idle-detection', 'idleDetection'],\n// chrome-specific permissions we have.\n['midi-sysex', 'midiSysex']]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * @internal\n   */\n  _attach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _detach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get _targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n  process() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _getIsPageTargetCallback() {\n    throw new Error('Not implemented');\n  }\n  createIncognitoBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n  browserContexts() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n  defaultBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  _disposeContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n  wsEndpoint() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n  newPage() {\n    throw new Error('Not implemented');\n  }\n  _createPageInContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n  targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The target associated with the browser.\n   */\n  target() {\n    throw new Error('Not implemented');\n  }\n  waitForTarget() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n  pages() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless, this is similar to `Chrome/61.0.3153.0`.\n   *\n   * The format of browser.version() might change with future releases of Chromium.\n   */\n  version() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n  userAgent() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n   * itself is considered to be disposed and cannot be used anymore.\n   */\n  close() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n  disconnect() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Indicates that the browser is connected.\n   */\n  isConnected() {\n    throw new Error('Not implemented');\n  }\n}\n/**\n * BrowserContexts provide a way to operate multiple independent browser\n * sessions. When a browser is launched, it has a single BrowserContext used by\n * default. The method {@link Browser.newPage | Browser.newPage} creates a page\n * in the default browser context.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and\n * will emit various events which are documented in the\n * {@link BrowserContextEmittedEvents} enum.\n *\n * If a page opens another page, e.g. with a `window.open` call, the popup will\n * belong to the parent page's browser context.\n *\n * Puppeteer allows creation of \"incognito\" browser contexts with\n * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}\n * method. \"Incognito\" browser contexts don't write any browsing data to disk.\n *\n * @example\n *\n * ```ts\n * // Create a new incognito browser context\n * const context = await browser.createIncognitoBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n *\n * @public\n */\nexport class BrowserContext extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * An array of all active targets inside the browser context.\n   */\n  targets() {\n    throw new Error('Not implemented');\n  }\n  waitForTarget() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * An array of all pages inside the browser context.\n   *\n   * @returns Promise which resolves to an array of all open pages.\n   * Non visible pages, such as `\"background_page\"`, will not be listed here.\n   * You can find them using {@link Target.page | the target page}.\n   */\n  pages() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns whether BrowserContext is incognito.\n   * The default browser context is the only non-incognito browser context.\n   *\n   * @remarks\n   * The default browser context cannot be closed.\n   */\n  isIncognito() {\n    throw new Error('Not implemented');\n  }\n  overridePermissions() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Clears all permission overrides for the browser context.\n   *\n   * @example\n   *\n   * ```ts\n   * const context = browser.defaultBrowserContext();\n   * context.overridePermissions('https://example.com', ['clipboard-read']);\n   * // do stuff ..\n   * context.clearPermissionOverrides();\n   * ```\n   */\n  clearPermissionOverrides() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Creates a new page in the browser context.\n   */\n  newPage() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser this browser context belongs to.\n   */\n  browser() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Closes the browser context. All the targets that belong to the browser context\n   * will be closed.\n   *\n   * @remarks\n   * Only incognito browser contexts can be closed.\n   */\n  close() {\n    throw new Error('Not implemented');\n  }\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","WEB_PERMISSION_TO_PROTOCOL_PERMISSION","Map","Browser","constructor","_attach","Error","_detach","_targets","process","_getIsPageTargetCallback","createIncognitoBrowserContext","browserContexts","defaultBrowserContext","_disposeContext","wsEndpoint","newPage","_createPageInContext","targets","target","waitForTarget","pages","version","userAgent","close","disconnect","isConnected","BrowserContext","isIncognito","overridePermissions","clearPermissionOverrides","browser"],"sources":["../../../../src/api/Browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}