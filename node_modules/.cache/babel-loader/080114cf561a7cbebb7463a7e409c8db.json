{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PuppeteerNode_launcher, _PuppeteerNode_productName;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PuppeteerNode = void 0;\nconst Puppeteer_js_1 = require(\"../common/Puppeteer.js\");\nconst revisions_js_1 = require(\"../revisions.js\");\nconst BrowserFetcher_js_1 = require(\"./BrowserFetcher.js\");\nconst ProductLauncher_js_1 = require(\"./ProductLauncher.js\");\n/**\n * Extends the main {@link Puppeteer} class with Node specific behaviour for\n * fetching and downloading browsers.\n *\n * If you're using Puppeteer in a Node environment, this is the class you'll get\n * when you run `require('puppeteer')` (or the equivalent ES `import`).\n *\n * @remarks\n * The most common method to use is {@link PuppeteerNode.launch | launch}, which\n * is used to launch and connect to a new browser instance.\n *\n * See {@link Puppeteer | the main Puppeteer class} for methods common to all\n * environments, such as {@link Puppeteer.connect}.\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n *\n * ```ts\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\nclass PuppeteerNode extends Puppeteer_js_1.Puppeteer {\n  /**\n   * @internal\n   */\n  constructor(settings) {\n    const {\n      preferredRevision,\n      productName,\n      ...commonSettings\n    } = settings;\n    super(commonSettings);\n    _PuppeteerNode_launcher.set(this, void 0);\n    _PuppeteerNode_productName.set(this, void 0);\n    /**\n     * @internal\n     */\n    this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n    __classPrivateFieldSet(this, _PuppeteerNode_productName, productName, \"f\");\n    if (preferredRevision) {\n      this._preferredRevision = preferredRevision;\n    }\n    this.connect = this.connect.bind(this);\n    this.launch = this.launch.bind(this);\n    this.executablePath = this.executablePath.bind(this);\n    this.defaultArgs = this.defaultArgs.bind(this);\n    this.createBrowserFetcher = this.createBrowserFetcher.bind(this);\n  }\n  /**\n   * This method attaches Puppeteer to an existing browser instance.\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n  connect(options) {\n    return super.connect(options);\n  }\n  /**\n   * @internal\n   */\n  get _productName() {\n    return __classPrivateFieldGet(this, _PuppeteerNode_productName, \"f\");\n  }\n  set _productName(name) {\n    if (__classPrivateFieldGet(this, _PuppeteerNode_productName, \"f\") !== name) {\n      this._changedProduct = true;\n    }\n    __classPrivateFieldSet(this, _PuppeteerNode_productName, name, \"f\");\n  }\n  /**\n   * Launches puppeteer and launches a browser instance with given arguments and\n   * options when specified.\n   *\n   * @example\n   * You can use `ignoreDefaultArgs` to filter out `--mute-audio` from default arguments:\n   *\n   * ```ts\n   * const browser = await puppeteer.launch({\n   *   ignoreDefaultArgs: ['--mute-audio'],\n   * });\n   * ```\n   *\n   * @remarks\n   * **NOTE** Puppeteer can also be used to control the Chrome browser, but it\n   * works best with the version of Chromium it is bundled with. There is no\n   * guarantee it will work with any other version. Use `executablePath` option\n   * with extreme caution. If Google Chrome (rather than Chromium) is preferred,\n   * a {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary}\n   * or\n   * {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel}\n   * build is suggested. In `puppeteer.launch([options])`, any mention of\n   * Chromium also applies to Chrome. See\n   * {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article}\n   * for a description of the differences between Chromium and Chrome.\n   * {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article}\n   * describes some differences for Linux users.\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n  launch() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (options.product) {\n      this._productName = options.product;\n    }\n    return this._launcher.launch(options);\n  }\n  /**\n   * @remarks\n   * **NOTE** `puppeteer.executablePath()` is affected by the\n   * `PUPPETEER_EXECUTABLE_PATH` and `PUPPETEER_CHROMIUM_REVISION` environment\n   * variables.\n   *\n   * @returns A path where Puppeteer expects to find the bundled browser. The\n   * browser binary might not be there if the download was skipped with the\n   * `PUPPETEER_SKIP_DOWNLOAD` environment variable.\n   */\n  executablePath(channel) {\n    return this._launcher.executablePath(channel);\n  }\n  /**\n   * @internal\n   */\n  get _launcher() {\n    if (!__classPrivateFieldGet(this, _PuppeteerNode_launcher, \"f\") || __classPrivateFieldGet(this, _PuppeteerNode_launcher, \"f\").product !== this._productName || this._changedProduct) {\n      switch (this._productName) {\n        case 'firefox':\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n          break;\n        case 'chrome':\n        default:\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n      }\n      this._changedProduct = false;\n      __classPrivateFieldSet(this, _PuppeteerNode_launcher, (0, ProductLauncher_js_1.createLauncher)(this._preferredRevision, this._isPuppeteerCore, this._productName), \"f\");\n    }\n    return __classPrivateFieldGet(this, _PuppeteerNode_launcher, \"f\");\n  }\n  /**\n   * The name of the browser that is under automation (`\"chrome\"` or\n   * `\"firefox\"`)\n   *\n   * @remarks\n   * The product is set by the `PUPPETEER_PRODUCT` environment variable or the\n   * `product` option in `puppeteer.launch([options])` and defaults to `chrome`.\n   * Firefox support is experimental.\n   */\n  get product() {\n    return this._launcher.product;\n  }\n  /**\n   * @param options - Set of configurable options to set on the browser.\n   * @returns The default flags that Chromium will be launched with.\n   */\n  defaultArgs() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this._launcher.defaultArgs(options);\n  }\n  /**\n   * @deprecated Import {@link BrowserFetcher} directly and use the constructor.\n   *\n   * @param options - Set of configurable options to specify the settings of the\n   * BrowserFetcher.\n   * @returns A new BrowserFetcher instance.\n   */\n  createBrowserFetcher(options) {\n    return new BrowserFetcher_js_1.BrowserFetcher(options);\n  }\n}\nexports.PuppeteerNode = PuppeteerNode;\n_PuppeteerNode_launcher = new WeakMap(), _PuppeteerNode_productName = new WeakMap();","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AAKA;AACA;AAEA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,MAAaA,aAAc,SAAQC,wBAAS;EAS1C;;;EAGAC,YACEC,QAG2B;IAE3B,MAAM;MAACC,iBAAiB;MAAEC,WAAW;MAAE,GAAGC;IAAc,CAAC,GAAGH,QAAQ;IACpE,KAAK,CAACG,cAAc,CAAC;IAlBvBC;IACAC;IAEA;;;IAGA,uBAAkB,GAAGC,kCAAmB,CAACC,QAAQ;IAa/CC,2BAAI,8BAAgBN,WAAW;IAC/B,IAAID,iBAAiB,EAAE;MACrB,IAAI,CAACQ,kBAAkB,GAAGR,iBAAiB;;IAG7C,IAAI,CAACS,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACE,cAAc,GAAG,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACG,WAAW,GAAG,IAAI,CAACA,WAAW,CAACH,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACI,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACJ,IAAI,CAAC,IAAI,CAAC;EAClE;EAEA;;;;;;EAMSD,OAAO,CAACM,OAAuB;IACtC,OAAO,KAAK,CAACN,OAAO,CAACM,OAAO,CAAC;EAC/B;EAEA;;;EAGA,IAAIC,YAAY;IACd,OAAOC,2BAAI,kCAAa;EAC1B;EACA,IAAID,YAAY,CAACE,IAAyB;IACxC,IAAID,2BAAI,kCAAa,KAAKC,IAAI,EAAE;MAC9B,IAAI,CAACC,eAAe,GAAG,IAAI;;IAE7BZ,2BAAI,8BAAgBW,IAAI;EAC1B;EAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BAP,MAAM,GAAqC;IAAA,IAApCI,8EAAkC,EAAE;IACzC,IAAIA,OAAO,CAACK,OAAO,EAAE;MACnB,IAAI,CAACJ,YAAY,GAAGD,OAAO,CAACK,OAAO;;IAErC,OAAO,IAAI,CAACC,SAAS,CAACV,MAAM,CAACI,OAAO,CAAC;EACvC;EAEA;;;;;;;;;;EAUAH,cAAc,CAACU,OAAgB;IAC7B,OAAO,IAAI,CAACD,SAAS,CAACT,cAAc,CAACU,OAAO,CAAC;EAC/C;EAEA;;;EAGA,IAAID,SAAS;IACX,IACE,CAACJ,2BAAI,+BAAU,IACfA,2BAAI,+BAAU,CAACG,OAAO,KAAK,IAAI,CAACJ,YAAY,IAC5C,IAAI,CAACG,eAAe,EACpB;MACA,QAAQ,IAAI,CAACH,YAAY;QACvB,KAAK,SAAS;UACZ,IAAI,CAACR,kBAAkB,GAAGH,kCAAmB,CAACkB,OAAO;UACrD;QACF,KAAK,QAAQ;QACb;UACE,IAAI,CAACf,kBAAkB,GAAGH,kCAAmB,CAACC,QAAQ;MAAC;MAE3D,IAAI,CAACa,eAAe,GAAG,KAAK;MAC5BZ,2BAAI,2BAAa,uCAAc,EAC7B,IAAI,CAACC,kBAAkB,EACvB,IAAI,CAACgB,gBAAgB,EACrB,IAAI,CAACR,YAAY,CAClB;;IAEH,OAAOC,2BAAI,+BAAU;EACvB;EAEA;;;;;;;;;EASA,IAAIG,OAAO;IACT,OAAO,IAAI,CAACC,SAAS,CAACD,OAAO;EAC/B;EAEA;;;;EAIAP,WAAW,GAA2C;IAAA,IAA1CE,8EAAwC,EAAE;IACpD,OAAO,IAAI,CAACM,SAAS,CAACR,WAAW,CAACE,OAAO,CAAC;EAC5C;EAEA;;;;;;;EAOAD,oBAAoB,CAACC,OAA8B;IACjD,OAAO,IAAIU,kCAAc,CAACV,OAAO,CAAC;EACpC;;AApKFW","names":["PuppeteerNode","Puppeteer_js_1","constructor","settings","preferredRevision","productName","commonSettings","_PuppeteerNode_launcher","_PuppeteerNode_productName","revisions_js_1","chromium","__classPrivateFieldSet","_preferredRevision","connect","bind","launch","executablePath","defaultArgs","createBrowserFetcher","options","_productName","__classPrivateFieldGet","name","_changedProduct","product","_launcher","channel","firefox","_isPuppeteerCore","BrowserFetcher_js_1","exports"],"sources":["../../../../src/node/PuppeteerNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}