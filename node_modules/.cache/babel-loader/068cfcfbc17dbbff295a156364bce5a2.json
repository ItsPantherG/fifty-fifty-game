{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PipeTransport_instances, _PipeTransport_pipeWrite, _PipeTransport_eventListeners, _PipeTransport_isClosed, _PipeTransport_pendingMessage, _PipeTransport_dispatch;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PipeTransport = void 0;\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\n/**\n * @internal\n */\nclass PipeTransport {\n  constructor(pipeWrite, pipeRead) {\n    _PipeTransport_instances.add(this);\n    _PipeTransport_pipeWrite.set(this, void 0);\n    _PipeTransport_eventListeners.set(this, void 0);\n    _PipeTransport_isClosed.set(this, false);\n    _PipeTransport_pendingMessage.set(this, '');\n    __classPrivateFieldSet(this, _PipeTransport_pipeWrite, pipeWrite, \"f\");\n    __classPrivateFieldSet(this, _PipeTransport_eventListeners, [(0, util_js_1.addEventListener)(pipeRead, 'data', buffer => {\n      return __classPrivateFieldGet(this, _PipeTransport_instances, \"m\", _PipeTransport_dispatch).call(this, buffer);\n    }), (0, util_js_1.addEventListener)(pipeRead, 'close', () => {\n      if (this.onclose) {\n        this.onclose.call(null);\n      }\n    }), (0, util_js_1.addEventListener)(pipeRead, 'error', util_js_1.debugError), (0, util_js_1.addEventListener)(pipeWrite, 'error', util_js_1.debugError)], \"f\");\n  }\n  send(message) {\n    (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _PipeTransport_isClosed, \"f\"), '`PipeTransport` is closed.');\n    __classPrivateFieldGet(this, _PipeTransport_pipeWrite, \"f\").write(message);\n    __classPrivateFieldGet(this, _PipeTransport_pipeWrite, \"f\").write('\\0');\n  }\n  close() {\n    __classPrivateFieldSet(this, _PipeTransport_isClosed, true, \"f\");\n    (0, util_js_1.removeEventListeners)(__classPrivateFieldGet(this, _PipeTransport_eventListeners, \"f\"));\n  }\n}\nexports.PipeTransport = PipeTransport;\n_PipeTransport_pipeWrite = new WeakMap(), _PipeTransport_eventListeners = new WeakMap(), _PipeTransport_isClosed = new WeakMap(), _PipeTransport_pendingMessage = new WeakMap(), _PipeTransport_instances = new WeakSet(), _PipeTransport_dispatch = function _PipeTransport_dispatch(buffer) {\n  (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _PipeTransport_isClosed, \"f\"), '`PipeTransport` is closed.');\n  let end = buffer.indexOf('\\0');\n  if (end === -1) {\n    __classPrivateFieldSet(this, _PipeTransport_pendingMessage, __classPrivateFieldGet(this, _PipeTransport_pendingMessage, \"f\") + buffer.toString(), \"f\");\n    return;\n  }\n  const message = __classPrivateFieldGet(this, _PipeTransport_pendingMessage, \"f\") + buffer.toString(undefined, 0, end);\n  if (this.onmessage) {\n    this.onmessage.call(null, message);\n  }\n  let start = end + 1;\n  end = buffer.indexOf('\\0', start);\n  while (end !== -1) {\n    if (this.onmessage) {\n      this.onmessage.call(null, buffer.toString(undefined, start, end));\n    }\n    start = end + 1;\n    end = buffer.indexOf('\\0', start);\n  }\n  __classPrivateFieldSet(this, _PipeTransport_pendingMessage, buffer.toString(undefined, start), \"f\");\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAgBA;AAMA;AAEA;;;AAGA,MAAaA,aAAa;EAUxBC,YACEC,SAAgC,EAChCC,QAA+B;;IAXjCC;IACAC;IAEAC,kCAAY,KAAK;IACjBC,wCAAkB,EAAE;IASlBC,2BAAI,4BAAcN,SAAS;IAC3BM,2BAAI,iCAAmB,CACrB,8BAAgB,EAACL,QAAQ,EAAE,MAAM,EAAEM,MAAM,IAAG;MAC1C,OAAOC,2BAAI,yDAAU,MAAd,IAAI,EAAWD,MAAM,CAAC;IAC/B,CAAC,CAAC,EACF,8BAAgB,EAACN,QAAQ,EAAE,OAAO,EAAE,MAAK;MACvC,IAAI,IAAI,CAACQ,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;;IAE3B,CAAC,CAAC,EACF,8BAAgB,EAACT,QAAQ,EAAE,OAAO,EAAEU,oBAAU,CAAC,EAC/C,8BAAgB,EAACX,SAAS,EAAE,OAAO,EAAEW,oBAAU,CAAC,CACjD;EACH;EAEAC,IAAI,CAACC,OAAe;IAClB,sBAAM,EAAC,CAACL,2BAAI,+BAAU,EAAE,4BAA4B,CAAC;IAErDA,2BAAI,gCAAW,CAACM,KAAK,CAACD,OAAO,CAAC;IAC9BL,2BAAI,gCAAW,CAACM,KAAK,CAAC,IAAI,CAAC;EAC7B;EA2BAC,KAAK;IACHT,2BAAI,2BAAa,IAAI;IACrB,kCAAoB,EAACE,2BAAI,qCAAgB,CAAC;EAC5C;;AAhEFQ;sRAoCYT,MAAc;EACtB,sBAAM,EAAC,CAACC,2BAAI,+BAAU,EAAE,4BAA4B,CAAC;EAErD,IAAIS,GAAG,GAAGV,MAAM,CAACW,OAAO,CAAC,IAAI,CAAC;EAC9B,IAAID,GAAG,KAAK,CAAC,CAAC,EAAE;IACdX,+HAAwBC,MAAM,CAACY,QAAQ,EAAE;IACzC;;EAEF,MAAMN,OAAO,GAAGL,2BAAI,qCAAgB,GAAGD,MAAM,CAACY,QAAQ,CAACC,SAAS,EAAE,CAAC,EAAEH,GAAG,CAAC;EACzE,IAAI,IAAI,CAACI,SAAS,EAAE;IAClB,IAAI,CAACA,SAAS,CAACX,IAAI,CAAC,IAAI,EAAEG,OAAO,CAAC;;EAGpC,IAAIS,KAAK,GAAGL,GAAG,GAAG,CAAC;EACnBA,GAAG,GAAGV,MAAM,CAACW,OAAO,CAAC,IAAI,EAAEI,KAAK,CAAC;EACjC,OAAOL,GAAG,KAAK,CAAC,CAAC,EAAE;IACjB,IAAI,IAAI,CAACI,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACX,IAAI,CAAC,IAAI,EAAEH,MAAM,CAACY,QAAQ,CAACC,SAAS,EAAEE,KAAK,EAAEL,GAAG,CAAC,CAAC;;IAEnEK,KAAK,GAAGL,GAAG,GAAG,CAAC;IACfA,GAAG,GAAGV,MAAM,CAACW,OAAO,CAAC,IAAI,EAAEI,KAAK,CAAC;;EAEnChB,2BAAI,iCAAmBC,MAAM,CAACY,QAAQ,CAACC,SAAS,EAAEE,KAAK,CAAC;AAC1D,CAAC","names":["PipeTransport","constructor","pipeWrite","pipeRead","_PipeTransport_pipeWrite","_PipeTransport_eventListeners","_PipeTransport_isClosed","_PipeTransport_pendingMessage","__classPrivateFieldSet","buffer","__classPrivateFieldGet","onclose","call","util_js_1","send","message","write","close","exports","end","indexOf","toString","undefined","onmessage","start"],"sources":["../../../../src/node/PipeTransport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}