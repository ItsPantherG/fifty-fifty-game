{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BrowserFetcher_instances, _BrowserFetcher_product, _BrowserFetcher_downloadFolder, _BrowserFetcher_downloadHost, _BrowserFetcher_platform, _BrowserFetcher_getFolderPath;\nimport { exec as execChildProcess } from 'child_process';\nimport extractZip from 'extract-zip';\nimport { createReadStream, createWriteStream, existsSync } from 'fs';\nimport { chmod, mkdir, readdir, unlink } from 'fs/promises';\nimport * as http from 'http';\nimport * as https from 'https';\nimport createHttpsProxyAgent from 'https-proxy-agent';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { getProxyForUrl } from 'proxy-from-env';\nimport removeRecursive from 'rimraf';\nimport tar from 'tar-fs';\nimport bzip from 'unbzip2-stream';\nimport * as URL from 'url';\nimport * as util from 'util';\nimport { promisify } from 'util';\nimport { debug } from '../common/Debug.js';\nimport { PUPPETEER_CACHE_DIR } from '../constants.js';\nimport { assert } from '../util/assert.js';\nconst experimentalChromiumMacArm = process.env['PUPPETEER_EXPERIMENTAL_CHROMIUM_MAC_ARM'] || process.env['npm_config_puppeteer_experimental_chromium_mac_arm'];\nconst debugFetcher = debug('puppeteer:fetcher');\nconst downloadURLs = {\n  chrome: {\n    linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n    mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n    mac_arm: '%s/chromium-browser-snapshots/Mac_Arm/%d/%s.zip',\n    win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n    win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip'\n  },\n  firefox: {\n    linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',\n    mac: '%s/firefox-%s.en-US.%s.dmg',\n    win32: '%s/firefox-%s.en-US.%s.zip',\n    win64: '%s/firefox-%s.en-US.%s.zip'\n  }\n};\nconst browserConfig = {\n  chrome: {\n    host: 'https://storage.googleapis.com'\n  },\n  firefox: {\n    host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central'\n  }\n};\nconst exec = promisify(execChildProcess);\nfunction archiveName(product, platform, revision) {\n  switch (product) {\n    case 'chrome':\n      switch (platform) {\n        case 'linux':\n          return 'chrome-linux';\n        case 'mac_arm':\n        case 'mac':\n          return 'chrome-mac';\n        case 'win32':\n        case 'win64':\n          // Windows archive name changed at r591479.\n          return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n      }\n    case 'firefox':\n      return platform;\n  }\n}\nfunction downloadURL(product, platform, host, revision) {\n  const url = util.format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));\n  return url;\n}\nfunction handleArm64() {\n  let exists = existsSync('/usr/bin/chromium-browser');\n  if (exists) {\n    return;\n  }\n  exists = existsSync('/usr/bin/chromium');\n  if (exists) {\n    return;\n  }\n  console.error('The chromium binary is not available for arm64.' + '\\nIf you are on Ubuntu, you can install with: ' + '\\n\\n sudo apt install chromium\\n' + '\\n\\n sudo apt install chromium-browser\\n');\n  throw new Error();\n}\n/**\n * BrowserFetcher can download and manage different versions of Chromium and\n * Firefox.\n *\n * @remarks\n * BrowserFetcher operates on revision strings that specify a precise version of\n * Chromium, e.g. `\"533271\"`. Revision strings can be obtained from\n * {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}. For Firefox,\n * BrowserFetcher downloads Firefox Nightly and operates on version numbers such\n * as `\"75\"`.\n *\n * @remarks\n * The default constructed fetcher will always be for Chromium unless otherwise\n * specified.\n *\n * @remarks\n * BrowserFetcher is not designed to work concurrently with other instances of\n * BrowserFetcher that share the same downloads directory.\n *\n * @example\n * An example of using BrowserFetcher to download a specific version of Chromium\n * and running Puppeteer against it:\n *\n * ```ts\n * const browserFetcher = new BrowserFetcher();\n * const revisionInfo = await browserFetcher.download('533271');\n * const browser = await puppeteer.launch({\n *   executablePath: revisionInfo.executablePath,\n * });\n * ```\n *\n * @public\n */\nexport class BrowserFetcher {\n  /**\n   * Constructs a browser fetcher for the given options.\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _BrowserFetcher_instances.add(this);\n    _BrowserFetcher_product.set(this, void 0);\n    _BrowserFetcher_downloadFolder.set(this, void 0);\n    _BrowserFetcher_downloadHost.set(this, void 0);\n    _BrowserFetcher_platform.set(this, void 0);\n    __classPrivateFieldSet(this, _BrowserFetcher_product, (options.product || 'chrome').toLowerCase(), \"f\");\n    assert(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\") === 'chrome' || __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\") === 'firefox', `Unknown product: \"${options.product}\"`);\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadFolder, options.path || path.join(PUPPETEER_CACHE_DIR, __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadHost, options.host || browserConfig[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")].host, \"f\");\n    if (options.platform) {\n      __classPrivateFieldSet(this, _BrowserFetcher_platform, options.platform, \"f\");\n    } else {\n      const platform = os.platform();\n      switch (platform) {\n        case 'darwin':\n          switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n            case 'chrome':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'arm64' && experimentalChromiumMacArm ? 'mac_arm' : 'mac', \"f\");\n              break;\n            case 'firefox':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, 'mac', \"f\");\n              break;\n          }\n          break;\n        case 'linux':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, 'linux', \"f\");\n          break;\n        case 'win32':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'x64' ||\n          // Windows 11 for ARM supports x64 emulation\n          os.arch() === 'arm64' && isWindows11(os.release()) ? 'win64' : 'win32', \"f\");\n          return;\n        default:\n          assert(false, 'Unsupported platform: ' + platform);\n      }\n    }\n    assert(downloadURLs[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")][__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")], 'Unsupported platform: ' + __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"));\n  }\n  /**\n   * @returns Returns the current `Platform`, which is one of `mac`, `linux`,\n   * `win32` or `win64`.\n   */\n  platform() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\");\n  }\n  /**\n   * @returns Returns the current `Product`, which is one of `chrome` or\n   * `firefox`.\n   */\n  product() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\");\n  }\n  /**\n   * @returns The download host being used.\n   */\n  host() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\");\n  }\n  /**\n   * Initiates a HEAD request to check if the revision is available.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to check availability for.\n   * @returns A promise that resolves to `true` if the revision could be downloaded\n   * from the host.\n   */\n  canDownload(revision) {\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    return new Promise(resolve => {\n      const request = httpRequest(url, 'HEAD', response => {\n        resolve(response.statusCode === 200);\n      }, false);\n      request.on('error', error => {\n        console.error(error);\n        resolve(false);\n      });\n    });\n  }\n  /**\n   * Initiates a GET request to download the revision from the host.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to download.\n   * @param progressCallback - A function that will be called with two arguments:\n   * How many bytes have been downloaded and the total number of bytes of the download.\n   * @returns A promise with revision information when the revision is downloaded\n   * and extracted.\n   */\n  async download(revision) {\n    let progressCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const fileName = url.split('/').pop();\n    assert(fileName, `A malformed download URL was found: ${url}.`);\n    const archivePath = path.join(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), fileName);\n    const outputPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    if (existsSync(outputPath)) {\n      return this.revisionInfo(revision);\n    }\n    if (!existsSync(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"))) {\n      await mkdir(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), {\n        recursive: true\n      });\n    }\n    // Use system Chromium builds on Linux ARM devices\n    if (os.platform() === 'linux' && os.arch() === 'arm64') {\n      handleArm64();\n      return;\n    }\n    try {\n      await _downloadFile(url, archivePath, progressCallback);\n      await install(archivePath, outputPath);\n    } finally {\n      if (existsSync(archivePath)) {\n        await unlink(archivePath);\n      }\n    }\n    const revisionInfo = this.revisionInfo(revision);\n    if (revisionInfo) {\n      await chmod(revisionInfo.executablePath, 0o755);\n    }\n    return revisionInfo;\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @returns A promise with a list of all revision strings (for the current `product`)\n   * available locally on disk.\n   */\n  async localRevisions() {\n    if (!existsSync(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"))) {\n      return [];\n    }\n    const fileNames = await readdir(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"));\n    return fileNames.map(fileName => {\n      return parseFolderPath(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), fileName);\n    }).filter(entry => {\n      var _a;\n      return (_a = entry && entry.platform === __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) !== null && _a !== void 0 ? _a : false;\n    }).map(entry => {\n      return entry.revision;\n    });\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - A revision to remove for the current `product`.\n   * @returns A promise that resolves when the revision has been removes or\n   * throws if the revision has not been downloaded.\n   */\n  async remove(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    assert(existsSync(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n    await new Promise(fulfill => {\n      return removeRecursive(folderPath, fulfill);\n    });\n  }\n  /**\n   * @param revision - The revision to get info for.\n   * @returns The revision info for the given revision.\n   */\n  revisionInfo(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    let executablePath = '';\n    switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n      case 'chrome':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome.exe');\n            break;\n        }\n        break;\n      case 'firefox':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, 'firefox', 'firefox');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, 'firefox', 'firefox.exe');\n            break;\n        }\n    }\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const local = existsSync(folderPath);\n    debugFetcher({\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    });\n    return {\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    };\n  }\n}\n_BrowserFetcher_product = new WeakMap(), _BrowserFetcher_downloadFolder = new WeakMap(), _BrowserFetcher_downloadHost = new WeakMap(), _BrowserFetcher_platform = new WeakMap(), _BrowserFetcher_instances = new WeakSet(), _BrowserFetcher_getFolderPath = function _BrowserFetcher_getFolderPath(revision) {\n  return path.resolve(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), `${__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")}-${revision}`);\n};\nfunction parseFolderPath(product, folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2) {\n    return;\n  }\n  const [platform, revision] = splits;\n  if (!revision || !platform || !(platform in downloadURLs[product])) {\n    return;\n  }\n  return {\n    product,\n    platform,\n    revision\n  };\n}\n/**\n * Windows 11 is identified by 10.0.22000 or greater\n * @internal\n */\nfunction isWindows11(version) {\n  const parts = version.split('.');\n  if (parts.length > 2) {\n    const major = parseInt(parts[0], 10);\n    const minor = parseInt(parts[1], 10);\n    const patch = parseInt(parts[2], 10);\n    return major > 10 || major === 10 && minor > 0 || major === 10 && minor === 0 && patch >= 22000;\n  }\n  return false;\n}\n/**\n * @internal\n */\nfunction _downloadFile(url, destinationPath, progressCallback) {\n  debugFetcher(`Downloading binary from ${url}`);\n  let fulfill;\n  let reject;\n  const promise = new Promise((x, y) => {\n    fulfill = x;\n    reject = y;\n  });\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      reject(error);\n      return;\n    }\n    const file = createWriteStream(destinationPath);\n    file.on('finish', () => {\n      return fulfill();\n    });\n    file.on('error', error => {\n      return reject(error);\n    });\n    response.pipe(file);\n    totalBytes = parseInt(response.headers['content-length'], 10);\n    if (progressCallback) {\n      response.on('data', onData);\n    }\n  });\n  request.on('error', error => {\n    return reject(error);\n  });\n  return promise;\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\nasync function install(archivePath, folderPath) {\n  debugFetcher(`Installing ${archivePath} to ${folderPath}`);\n  if (archivePath.endsWith('.zip')) {\n    await extractZip(archivePath, {\n      dir: folderPath\n    });\n  } else if (archivePath.endsWith('.tar.bz2')) {\n    await extractTar(archivePath, folderPath);\n  } else if (archivePath.endsWith('.dmg')) {\n    await mkdir(folderPath);\n    await installDMG(archivePath, folderPath);\n  } else {\n    throw new Error(`Unsupported archive format: ${archivePath}`);\n  }\n}\n/**\n * @internal\n */\nfunction extractTar(tarPath, folderPath) {\n  return new Promise((fulfill, reject) => {\n    const tarStream = tar.extract(folderPath);\n    tarStream.on('error', reject);\n    tarStream.on('finish', fulfill);\n    const readStream = createReadStream(tarPath);\n    readStream.pipe(bzip()).pipe(tarStream);\n  });\n}\n/**\n * @internal\n */\nasync function installDMG(dmgPath, folderPath) {\n  const {\n    stdout\n  } = await exec(`hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`);\n  const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n  if (!volumes) {\n    throw new Error(`Could not find volume path in ${stdout}`);\n  }\n  const mountPath = volumes[0];\n  try {\n    const fileNames = await readdir(mountPath);\n    const appName = fileNames.find(item => {\n      return typeof item === 'string' && item.endsWith('.app');\n    });\n    if (!appName) {\n      throw new Error(`Cannot find app in ${mountPath}`);\n    }\n    const mountedPath = path.join(mountPath, appName);\n    debugFetcher(`Copying ${mountedPath} to ${folderPath}`);\n    await exec(`cp -R \"${mountedPath}\" \"${folderPath}\"`);\n  } finally {\n    debugFetcher(`Unmounting ${mountPath}`);\n    await exec(`hdiutil detach \"${mountPath}\" -quiet`);\n  }\n}\nfunction httpRequest(url, method, response) {\n  let keepAlive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const urlParsed = URL.parse(url);\n  let options = {\n    ...urlParsed,\n    method,\n    headers: keepAlive ? {\n      Connection: 'keep-alive'\n    } : undefined\n  };\n  const proxyURL = getProxyForUrl(url);\n  if (proxyURL) {\n    if (url.startsWith('http:')) {\n      const proxy = URL.parse(proxyURL);\n      options = {\n        path: options.href,\n        host: proxy.hostname,\n        port: proxy.port\n      };\n    } else {\n      const parsedProxyURL = URL.parse(proxyURL);\n      const proxyOptions = {\n        ...parsedProxyURL,\n        secureProxy: parsedProxyURL.protocol === 'https:'\n      };\n      options.agent = createHttpsProxyAgent(proxyOptions);\n      options.rejectUnauthorized = false;\n    }\n  }\n  const requestCallback = res => {\n    if (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      httpRequest(res.headers.location, method, response);\n    } else {\n      response(res);\n    }\n  };\n  const request = options.protocol === 'https:' ? https.request(options, requestCallback) : http.request(options, requestCallback);\n  request.end();\n  return request;\n}","map":{"version":3,"mappings":"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","names":["exec","execChildProcess","extractZip","createReadStream","createWriteStream","existsSync","chmod","mkdir","readdir","unlink","http","https","createHttpsProxyAgent","os","path","getProxyForUrl","removeRecursive","tar","bzip","URL","util","promisify","debug","PUPPETEER_CACHE_DIR","assert","experimentalChromiumMacArm","process","env","debugFetcher","downloadURLs","chrome","linux","mac","mac_arm","win32","win64","firefox","browserConfig","host","archiveName","product","platform","revision","parseInt","downloadURL","url","format","handleArm64","exists","console","error","Error","BrowserFetcher","constructor","options","_BrowserFetcher_product","_BrowserFetcher_downloadFolder","_BrowserFetcher_downloadHost","_BrowserFetcher_platform","__classPrivateFieldSet","toLowerCase","__classPrivateFieldGet","join","arch","isWindows11","release","canDownload","Promise","resolve","request","httpRequest","response","statusCode","on","download","progressCallback","fileName","split","pop","archivePath","outputPath","revisionInfo","recursive","_downloadFile","install","executablePath","localRevisions","fileNames","map","parseFolderPath","filter","entry","remove","folderPath","fulfill","local","name","basename","splits","length","version","parts","major","minor","patch","destinationPath","reject","promise","x","y","downloadedBytes","totalBytes","resume","file","pipe","headers","onData","chunk","endsWith","dir","extractTar","installDMG","tarPath","tarStream","extract","readStream","dmgPath","stdout","volumes","match","mountPath","appName","find","item","mountedPath","method","keepAlive","urlParsed","parse","Connection","undefined","proxyURL","startsWith","proxy","href","hostname","port","parsedProxyURL","proxyOptions","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","res","location","end"],"sources":["../../../../src/node/BrowserFetcher.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}