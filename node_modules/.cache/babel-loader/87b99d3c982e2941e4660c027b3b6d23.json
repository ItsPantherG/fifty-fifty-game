{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _JSHandle_disposed, _JSHandle_context, _JSHandle_remoteObject;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSHandle = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * Represents a reference to a JavaScript object. Instances can be created using\n * {@link Page.evaluateHandle}.\n *\n * Handles prevent the referenced JavaScript object from being garbage-collected\n * unless the handle is purposely {@link JSHandle.dispose | disposed}. JSHandles\n * are auto-disposed when their associated frame is navigated away or the parent\n * context gets destroyed.\n *\n * Handles can be used as arguments for any evaluation function such as\n * {@link Page.$eval}, {@link Page.evaluate}, and {@link Page.evaluateHandle}.\n * They are resolved to their referenced object.\n *\n * @example\n *\n * ```ts\n * const windowHandle = await page.evaluateHandle(() => window);\n * ```\n *\n * @public\n */\nclass JSHandle {\n  /**\n   * @internal\n   */\n  constructor(context, remoteObject) {\n    _JSHandle_disposed.set(this, false);\n    _JSHandle_context.set(this, void 0);\n    _JSHandle_remoteObject.set(this, void 0);\n    __classPrivateFieldSet(this, _JSHandle_context, context, \"f\");\n    __classPrivateFieldSet(this, _JSHandle_remoteObject, remoteObject, \"f\");\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    return __classPrivateFieldGet(this, _JSHandle_context, \"f\")._client;\n  }\n  /**\n   * @internal\n   */\n  get disposed() {\n    return __classPrivateFieldGet(this, _JSHandle_disposed, \"f\");\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    return __classPrivateFieldGet(this, _JSHandle_context, \"f\");\n  }\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   *\n   * @see {@link ExecutionContext.evaluate} for more details.\n   */\n  async evaluate(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return await this.executionContext().evaluate(pageFunction, this, ...args);\n  }\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   *\n   * @see {@link ExecutionContext.evaluateHandle} for more details.\n   */\n  async evaluateHandle(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    return await this.executionContext().evaluateHandle(pageFunction, this, ...args);\n  }\n  async getProperty(propertyName) {\n    return this.evaluateHandle((object, propertyName) => {\n      return object[propertyName];\n    }, propertyName);\n  }\n  /**\n   * Gets a map of handles representing the properties of the current handle.\n   *\n   * @example\n   *\n   * ```ts\n   * const listHandle = await page.evaluateHandle(() => document.body.children);\n   * const properties = await listHandle.getProperties();\n   * const children = [];\n   * for (const property of properties.values()) {\n   *   const element = property.asElement();\n   *   if (element) {\n   *     children.push(element);\n   *   }\n   * }\n   * children; // holds elementHandles to all children of document.body\n   * ```\n   */\n  async getProperties() {\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").objectId);\n    // We use Runtime.getProperties rather than iterative building because the\n    // iterative approach might create a distorted snapshot.\n    const response = await this.client.send('Runtime.getProperties', {\n      objectId: __classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n    for (const property of response.result) {\n      if (!property.enumerable || !property.value) {\n        continue;\n      }\n      result.set(property.name, (0, util_js_1.createJSHandle)(__classPrivateFieldGet(this, _JSHandle_context, \"f\"), property.value));\n    }\n    return result;\n  }\n  /**\n   * @returns A vanilla object representing the serializable portions of the\n   * referenced object.\n   * @throws Throws if the object cannot be serialized due to circularity.\n   *\n   * @remarks\n   * If the object has a `toJSON` function, it **will not** be called.\n   */\n  async jsonValue() {\n    if (!__classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").objectId) {\n      return (0, util_js_1.valueFromRemoteObject)(__classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\"));\n    }\n    const value = await this.evaluate(object => {\n      return object;\n    });\n    if (value === undefined) {\n      throw new Error('Could not serialize referenced object');\n    }\n    return value;\n  }\n  /**\n   * @returns Either `null` or the handle itself if the handle is an\n   * instance of {@link ElementHandle}.\n   */\n  asElement() {\n    return null;\n  }\n  /**\n   * Releases the object referenced by the handle for garbage collection.\n   */\n  async dispose() {\n    if (__classPrivateFieldGet(this, _JSHandle_disposed, \"f\")) {\n      return;\n    }\n    __classPrivateFieldSet(this, _JSHandle_disposed, true, \"f\");\n    await (0, util_js_1.releaseObject)(this.client, __classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\"));\n  }\n  /**\n   * Returns a string representation of the JSHandle.\n   *\n   * @remarks\n   * Useful during debugging.\n   */\n  toString() {\n    if (!__classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").objectId) {\n      return 'JSHandle:' + (0, util_js_1.valueFromRemoteObject)(__classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\"));\n    }\n    const type = __classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").subtype || __classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\").type;\n    return 'JSHandle@' + type;\n  }\n  /**\n   * Provides access to the\n   * [Protocol.Runtime.RemoteObject](https://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-RemoteObject)\n   * backing this handle.\n   */\n  remoteObject() {\n    return __classPrivateFieldGet(this, _JSHandle_remoteObject, \"f\");\n  }\n}\nexports.JSHandle = JSHandle;\n_JSHandle_disposed = new WeakMap(), _JSHandle_context = new WeakMap(), _JSHandle_remoteObject = new WeakMap();","map":{"version":3,"mappings":"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","names":["JSHandle","constructor","context","remoteObject","_JSHandle_disposed","_JSHandle_context","_JSHandle_remoteObject","__classPrivateFieldSet","client","__classPrivateFieldGet","_client","disposed","executionContext","evaluate","pageFunction","args","evaluateHandle","getProperty","propertyName","object","getProperties","objectId","response","send","ownProperties","result","Map","property","enumerable","value","set","name","jsonValue","undefined","Error","asElement","dispose","toString","type","subtype","exports"],"sources":["../../../../src/common/JSHandle.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}