{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Connection_instances, _Connection_transport, _Connection_delay, _Connection_lastId, _Connection_closed, _Connection_callbacks, _Connection_onClose;\nimport { debug } from '../Debug.js';\nconst debugProtocolSend = debug('puppeteer:webDriverBiDi:SEND ►');\nconst debugProtocolReceive = debug('puppeteer:webDriverBiDi:RECV ◀');\nimport { EventEmitter } from '../EventEmitter.js';\nimport { ProtocolError } from '../Errors.js';\n/**\n * @internal\n */\nexport class Connection extends EventEmitter {\n  constructor(transport) {\n    let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    super();\n    _Connection_instances.add(this);\n    _Connection_transport.set(this, void 0);\n    _Connection_delay.set(this, void 0);\n    _Connection_lastId.set(this, 0);\n    _Connection_closed.set(this, false);\n    _Connection_callbacks.set(this, new Map());\n    __classPrivateFieldSet(this, _Connection_delay, delay, \"f\");\n    __classPrivateFieldSet(this, _Connection_transport, transport, \"f\");\n    __classPrivateFieldGet(this, _Connection_transport, \"f\").onmessage = this.onMessage.bind(this);\n    __classPrivateFieldGet(this, _Connection_transport, \"f\").onclose = __classPrivateFieldGet(this, _Connection_instances, \"m\", _Connection_onClose).bind(this);\n  }\n  get closed() {\n    return __classPrivateFieldGet(this, _Connection_closed, \"f\");\n  }\n  send(method, params) {\n    var _a;\n    const id = __classPrivateFieldSet(this, _Connection_lastId, (_a = __classPrivateFieldGet(this, _Connection_lastId, \"f\"), ++_a), \"f\");\n    const stringifiedMessage = JSON.stringify({\n      id,\n      method,\n      params\n    });\n    debugProtocolSend(stringifiedMessage);\n    __classPrivateFieldGet(this, _Connection_transport, \"f\").send(stringifiedMessage);\n    return new Promise((resolve, reject) => {\n      __classPrivateFieldGet(this, _Connection_callbacks, \"f\").set(id, {\n        resolve,\n        reject,\n        error: new ProtocolError(),\n        method\n      });\n    });\n  }\n  /**\n   * @internal\n   */\n  async onMessage(message) {\n    if (__classPrivateFieldGet(this, _Connection_delay, \"f\")) {\n      await new Promise(f => {\n        return setTimeout(f, __classPrivateFieldGet(this, _Connection_delay, \"f\"));\n      });\n    }\n    debugProtocolReceive(message);\n    const object = JSON.parse(message);\n    if ('id' in object) {\n      const callback = __classPrivateFieldGet(this, _Connection_callbacks, \"f\").get(object.id);\n      // Callbacks could be all rejected if someone has called `.dispose()`.\n      if (callback) {\n        __classPrivateFieldGet(this, _Connection_callbacks, \"f\").delete(object.id);\n        if ('error' in object) {\n          callback.reject(createProtocolError(callback.error, callback.method, object));\n        } else {\n          callback.resolve(object.result);\n        }\n      }\n    } else {\n      this.emit(object.method, object.params);\n    }\n  }\n  dispose() {\n    __classPrivateFieldGet(this, _Connection_instances, \"m\", _Connection_onClose).call(this);\n    __classPrivateFieldGet(this, _Connection_transport, \"f\").close();\n  }\n}\n_Connection_transport = new WeakMap(), _Connection_delay = new WeakMap(), _Connection_lastId = new WeakMap(), _Connection_closed = new WeakMap(), _Connection_callbacks = new WeakMap(), _Connection_instances = new WeakSet(), _Connection_onClose = function _Connection_onClose() {\n  if (__classPrivateFieldGet(this, _Connection_closed, \"f\")) {\n    return;\n  }\n  __classPrivateFieldSet(this, _Connection_closed, true, \"f\");\n  __classPrivateFieldGet(this, _Connection_transport, \"f\").onmessage = undefined;\n  __classPrivateFieldGet(this, _Connection_transport, \"f\").onclose = undefined;\n  for (const callback of __classPrivateFieldGet(this, _Connection_callbacks, \"f\").values()) {\n    callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Connection closed.`));\n  }\n  __classPrivateFieldGet(this, _Connection_callbacks, \"f\").clear();\n};\nfunction rewriteError(error, message, originalMessage) {\n  error.message = message;\n  error.originalMessage = originalMessage !== null && originalMessage !== void 0 ? originalMessage : error.originalMessage;\n  return error;\n}\nfunction createProtocolError(error, method, object) {\n  let message = `Protocol error (${method}): ${object.error} ${object.message}`;\n  if (object.stacktrace) {\n    message += ` ${object.stacktrace}`;\n  }\n  return rewriteError(error, message, object.message);\n}","map":{"version":3,"mappings":"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","names":["debug","debugProtocolSend","debugProtocolReceive","EventEmitter","ProtocolError","Connection","constructor","transport","delay","_Connection_transport","_Connection_delay","_Connection_lastId","_Connection_closed","_Connection_callbacks","Map","__classPrivateFieldSet","__classPrivateFieldGet","onmessage","onMessage","bind","onclose","closed","send","method","params","id","_a","stringifiedMessage","JSON","stringify","Promise","resolve","reject","set","error","message","f","setTimeout","object","parse","callback","get","delete","createProtocolError","result","emit","dispose","close","undefined","values","rewriteError","clear","originalMessage","stacktrace"],"sources":["../../../../../src/common/bidi/Connection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}