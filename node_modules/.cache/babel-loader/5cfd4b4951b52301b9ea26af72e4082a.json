{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FrameManager_instances, _FrameManager_page, _FrameManager_networkManager, _FrameManager_timeoutSettings, _FrameManager_contextIdToContext, _FrameManager_isolatedWorlds, _FrameManager_client, _FrameManager_onLifecycleEvent, _FrameManager_onFrameStartedLoading, _FrameManager_onFrameStoppedLoading, _FrameManager_handleFrameTree, _FrameManager_onFrameAttached, _FrameManager_onFrameNavigated, _FrameManager_createIsolatedWorld, _FrameManager_onFrameNavigatedWithinDocument, _FrameManager_onFrameDetached, _FrameManager_onExecutionContextCreated, _FrameManager_onExecutionContextDestroyed, _FrameManager_onExecutionContextsCleared, _FrameManager_removeFramesRecursively;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameManager = exports.FrameManagerEmittedEvents = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\nconst Frame_js_1 = require(\"./Frame.js\");\nconst FrameTree_js_1 = require(\"./FrameTree.js\");\nconst IsolatedWorld_js_1 = require(\"./IsolatedWorld.js\");\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\nconst util_js_1 = require(\"./util.js\");\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n/**\n * We use symbols to prevent external parties listening to these events.\n * They are internal to Puppeteer.\n *\n * @internal\n */\nexports.FrameManagerEmittedEvents = {\n  FrameAttached: Symbol('FrameManager.FrameAttached'),\n  FrameNavigated: Symbol('FrameManager.FrameNavigated'),\n  FrameDetached: Symbol('FrameManager.FrameDetached'),\n  FrameSwapped: Symbol('FrameManager.FrameSwapped'),\n  LifecycleEvent: Symbol('FrameManager.LifecycleEvent'),\n  FrameNavigatedWithinDocument: Symbol('FrameManager.FrameNavigatedWithinDocument'),\n  ExecutionContextCreated: Symbol('FrameManager.ExecutionContextCreated'),\n  ExecutionContextDestroyed: Symbol('FrameManager.ExecutionContextDestroyed')\n};\n/**\n * A frame manager manages the frames for a given {@link Page | page}.\n *\n * @internal\n */\nclass FrameManager extends EventEmitter_js_1.EventEmitter {\n  constructor(client, page, ignoreHTTPSErrors, timeoutSettings) {\n    super();\n    _FrameManager_instances.add(this);\n    _FrameManager_page.set(this, void 0);\n    _FrameManager_networkManager.set(this, void 0);\n    _FrameManager_timeoutSettings.set(this, void 0);\n    _FrameManager_contextIdToContext.set(this, new Map());\n    _FrameManager_isolatedWorlds.set(this, new Set());\n    _FrameManager_client.set(this, void 0);\n    /**\n     * @internal\n     */\n    this._frameTree = new FrameTree_js_1.FrameTree();\n    __classPrivateFieldSet(this, _FrameManager_client, client, \"f\");\n    __classPrivateFieldSet(this, _FrameManager_page, page, \"f\");\n    __classPrivateFieldSet(this, _FrameManager_networkManager, new NetworkManager_js_1.NetworkManager(client, ignoreHTTPSErrors, this), \"f\");\n    __classPrivateFieldSet(this, _FrameManager_timeoutSettings, timeoutSettings, \"f\");\n    this.setupEventListeners(__classPrivateFieldGet(this, _FrameManager_client, \"f\"));\n  }\n  get timeoutSettings() {\n    return __classPrivateFieldGet(this, _FrameManager_timeoutSettings, \"f\");\n  }\n  get networkManager() {\n    return __classPrivateFieldGet(this, _FrameManager_networkManager, \"f\");\n  }\n  get client() {\n    return __classPrivateFieldGet(this, _FrameManager_client, \"f\");\n  }\n  setupEventListeners(session) {\n    session.on('Page.frameAttached', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameAttached).call(this, session, event.frameId, event.parentFrameId);\n    });\n    session.on('Page.frameNavigated', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameNavigated).call(this, event.frame);\n    });\n    session.on('Page.navigatedWithinDocument', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameNavigatedWithinDocument).call(this, event.frameId, event.url);\n    });\n    session.on('Page.frameDetached', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameDetached).call(this, event.frameId, event.reason);\n    });\n    session.on('Page.frameStartedLoading', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameStartedLoading).call(this, event.frameId);\n    });\n    session.on('Page.frameStoppedLoading', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameStoppedLoading).call(this, event.frameId);\n    });\n    session.on('Runtime.executionContextCreated', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onExecutionContextCreated).call(this, event.context, session);\n    });\n    session.on('Runtime.executionContextDestroyed', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onExecutionContextDestroyed).call(this, event.executionContextId, session);\n    });\n    session.on('Runtime.executionContextsCleared', () => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onExecutionContextsCleared).call(this, session);\n    });\n    session.on('Page.lifecycleEvent', event => {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onLifecycleEvent).call(this, event);\n    });\n  }\n  async initialize() {\n    let client = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : __classPrivateFieldGet(this, _FrameManager_client, \"f\");\n    try {\n      const result = await Promise.all([client.send('Page.enable'), client.send('Page.getFrameTree')]);\n      const {\n        frameTree\n      } = result[1];\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_handleFrameTree).call(this, client, frameTree);\n      await Promise.all([client.send('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }), client.send('Runtime.enable').then(() => {\n        return __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_createIsolatedWorld).call(this, client, UTILITY_WORLD_NAME);\n      }),\n      // TODO: Network manager is not aware of OOP iframes yet.\n      client === __classPrivateFieldGet(this, _FrameManager_client, \"f\") ? __classPrivateFieldGet(this, _FrameManager_networkManager, \"f\").initialize() : Promise.resolve()]);\n    } catch (error) {\n      // The target might have been closed before the initialization finished.\n      if ((0, ErrorLike_js_1.isErrorLike)(error) && (0, Connection_js_1.isTargetClosedError)(error)) {\n        return;\n      }\n      throw error;\n    }\n  }\n  executionContextById(contextId) {\n    let session = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __classPrivateFieldGet(this, _FrameManager_client, \"f\");\n    const key = `${session.id()}:${contextId}`;\n    const context = __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").get(key);\n    (0, assert_js_1.assert)(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n  page() {\n    return __classPrivateFieldGet(this, _FrameManager_page, \"f\");\n  }\n  mainFrame() {\n    const mainFrame = this._frameTree.getMainFrame();\n    (0, assert_js_1.assert)(mainFrame, 'Requesting main frame too early!');\n    return mainFrame;\n  }\n  frames() {\n    return Array.from(this._frameTree.frames());\n  }\n  frame(frameId) {\n    return this._frameTree.getById(frameId) || null;\n  }\n  onAttachedToTarget(target) {\n    if (target._getTargetInfo().type !== 'iframe') {\n      return;\n    }\n    const frame = this.frame(target._getTargetInfo().targetId);\n    if (frame) {\n      frame.updateClient(target._session());\n    }\n    this.setupEventListeners(target._session());\n    this.initialize(target._session());\n  }\n  onDetachedFromTarget(target) {\n    const frame = this.frame(target._targetId);\n    if (frame && frame.isOOPFrame()) {\n      // When an OOP iframe is removed from the page, it\n      // will only get a Target.detachedFromTarget event.\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_removeFramesRecursively).call(this, frame);\n    }\n  }\n}\nexports.FrameManager = FrameManager;\n_FrameManager_page = new WeakMap(), _FrameManager_networkManager = new WeakMap(), _FrameManager_timeoutSettings = new WeakMap(), _FrameManager_contextIdToContext = new WeakMap(), _FrameManager_isolatedWorlds = new WeakMap(), _FrameManager_client = new WeakMap(), _FrameManager_instances = new WeakSet(), _FrameManager_onLifecycleEvent = function _FrameManager_onLifecycleEvent(event) {\n  const frame = this.frame(event.frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLifecycleEvent(event.loaderId, event.name);\n  this.emit(exports.FrameManagerEmittedEvents.LifecycleEvent, frame);\n}, _FrameManager_onFrameStartedLoading = function _FrameManager_onFrameStartedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStarted();\n}, _FrameManager_onFrameStoppedLoading = function _FrameManager_onFrameStoppedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStopped();\n  this.emit(exports.FrameManagerEmittedEvents.LifecycleEvent, frame);\n}, _FrameManager_handleFrameTree = function _FrameManager_handleFrameTree(session, frameTree) {\n  if (frameTree.frame.parentId) {\n    __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameAttached).call(this, session, frameTree.frame.id, frameTree.frame.parentId);\n  }\n  __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_onFrameNavigated).call(this, frameTree.frame);\n  if (!frameTree.childFrames) {\n    return;\n  }\n  for (const child of frameTree.childFrames) {\n    __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_handleFrameTree).call(this, session, child);\n  }\n}, _FrameManager_onFrameAttached = function _FrameManager_onFrameAttached(session, frameId, parentFrameId) {\n  let frame = this.frame(frameId);\n  if (frame) {\n    if (session && frame.isOOPFrame()) {\n      // If an OOP iframes becomes a normal iframe again\n      // it is first attached to the parent page before\n      // the target is removed.\n      frame.updateClient(session);\n    }\n    return;\n  }\n  frame = new Frame_js_1.Frame(this, frameId, parentFrameId, session);\n  this._frameTree.addFrame(frame);\n  this.emit(exports.FrameManagerEmittedEvents.FrameAttached, frame);\n}, _FrameManager_onFrameNavigated = async function _FrameManager_onFrameNavigated(framePayload) {\n  const frameId = framePayload.id;\n  const isMainFrame = !framePayload.parentId;\n  let frame = this._frameTree.getById(frameId);\n  // Detach all child frames first.\n  if (frame) {\n    for (const child of frame.childFrames()) {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_removeFramesRecursively).call(this, child);\n    }\n  }\n  // Update or create main frame.\n  if (isMainFrame) {\n    if (frame) {\n      // Update frame id to retain frame identity on cross-process navigation.\n      this._frameTree.removeFrame(frame);\n      frame._id = frameId;\n    } else {\n      // Initial main frame navigation.\n      frame = new Frame_js_1.Frame(this, frameId, undefined, __classPrivateFieldGet(this, _FrameManager_client, \"f\"));\n    }\n    this._frameTree.addFrame(frame);\n  }\n  frame = await this._frameTree.waitForFrame(frameId);\n  frame._navigated(framePayload);\n  this.emit(exports.FrameManagerEmittedEvents.FrameNavigated, frame);\n}, _FrameManager_createIsolatedWorld = async function _FrameManager_createIsolatedWorld(session, name) {\n  const key = `${session.id()}:${name}`;\n  if (__classPrivateFieldGet(this, _FrameManager_isolatedWorlds, \"f\").has(key)) {\n    return;\n  }\n  await session.send('Page.addScriptToEvaluateOnNewDocument', {\n    source: `//# sourceURL=${ExecutionContext_js_1.EVALUATION_SCRIPT_URL}`,\n    worldName: name\n  });\n  await Promise.all(this.frames().filter(frame => {\n    return frame._client() === session;\n  }).map(frame => {\n    // Frames might be removed before we send this, so we don't want to\n    // throw an error.\n    return session.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      worldName: name,\n      grantUniveralAccess: true\n    }).catch(util_js_1.debugError);\n  }));\n  __classPrivateFieldGet(this, _FrameManager_isolatedWorlds, \"f\").add(key);\n}, _FrameManager_onFrameNavigatedWithinDocument = function _FrameManager_onFrameNavigatedWithinDocument(frameId, url) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._navigatedWithinDocument(url);\n  this.emit(exports.FrameManagerEmittedEvents.FrameNavigatedWithinDocument, frame);\n  this.emit(exports.FrameManagerEmittedEvents.FrameNavigated, frame);\n}, _FrameManager_onFrameDetached = function _FrameManager_onFrameDetached(frameId, reason) {\n  const frame = this.frame(frameId);\n  if (reason === 'remove') {\n    // Only remove the frame if the reason for the detached event is\n    // an actual removement of the frame.\n    // For frames that become OOP iframes, the reason would be 'swap'.\n    if (frame) {\n      __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_removeFramesRecursively).call(this, frame);\n    }\n  } else if (reason === 'swap') {\n    this.emit(exports.FrameManagerEmittedEvents.FrameSwapped, frame);\n  }\n}, _FrameManager_onExecutionContextCreated = function _FrameManager_onExecutionContextCreated(contextPayload, session) {\n  const auxData = contextPayload.auxData;\n  const frameId = auxData && auxData.frameId;\n  const frame = typeof frameId === 'string' ? this.frame(frameId) : undefined;\n  let world;\n  if (frame) {\n    // Only care about execution contexts created for the current session.\n    if (frame._client() !== session) {\n      return;\n    }\n    if (contextPayload.auxData && !!contextPayload.auxData['isDefault']) {\n      world = frame.worlds[IsolatedWorld_js_1.MAIN_WORLD];\n    } else if (contextPayload.name === UTILITY_WORLD_NAME && !frame.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].hasContext()) {\n      // In case of multiple sessions to the same target, there's a race between\n      // connections so we might end up creating multiple isolated worlds.\n      // We can use either.\n      world = frame.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD];\n    }\n  }\n  const context = new ExecutionContext_js_1.ExecutionContext((frame === null || frame === void 0 ? void 0 : frame._client()) || __classPrivateFieldGet(this, _FrameManager_client, \"f\"), contextPayload, world);\n  if (world) {\n    world.setContext(context);\n  }\n  const key = `${session.id()}:${contextPayload.id}`;\n  __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").set(key, context);\n}, _FrameManager_onExecutionContextDestroyed = function _FrameManager_onExecutionContextDestroyed(executionContextId, session) {\n  const key = `${session.id()}:${executionContextId}`;\n  const context = __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").get(key);\n  if (!context) {\n    return;\n  }\n  __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").delete(key);\n  if (context._world) {\n    context._world.clearContext();\n  }\n}, _FrameManager_onExecutionContextsCleared = function _FrameManager_onExecutionContextsCleared(session) {\n  for (const [key, context] of __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").entries()) {\n    // Make sure to only clear execution contexts that belong\n    // to the current session.\n    if (context._client !== session) {\n      continue;\n    }\n    if (context._world) {\n      context._world.clearContext();\n    }\n    __classPrivateFieldGet(this, _FrameManager_contextIdToContext, \"f\").delete(key);\n  }\n}, _FrameManager_removeFramesRecursively = function _FrameManager_removeFramesRecursively(frame) {\n  for (const child of frame.childFrames()) {\n    __classPrivateFieldGet(this, _FrameManager_instances, \"m\", _FrameManager_removeFramesRecursively).call(this, child);\n  }\n  frame._detach();\n  this._frameTree.removeFrame(frame);\n  this.emit(exports.FrameManagerEmittedEvents.FrameDetached, frame);\n};","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA,MAAMA,kBAAkB,GAAG,6BAA6B;AAExD;;;;;;AAMaC,iCAAyB,GAAG;EACvCC,aAAa,EAAEC,MAAM,CAAC,4BAA4B,CAAC;EACnDC,cAAc,EAAED,MAAM,CAAC,6BAA6B,CAAC;EACrDE,aAAa,EAAEF,MAAM,CAAC,4BAA4B,CAAC;EACnDG,YAAY,EAAEH,MAAM,CAAC,2BAA2B,CAAC;EACjDI,cAAc,EAAEJ,MAAM,CAAC,6BAA6B,CAAC;EACrDK,4BAA4B,EAAEL,MAAM,CAClC,2CAA2C,CAC5C;EACDM,uBAAuB,EAAEN,MAAM,CAAC,sCAAsC,CAAC;EACvEO,yBAAyB,EAAEP,MAAM,CAAC,wCAAwC;CAC3E;AAED;;;;;AAKA,MAAaQ,YAAa,SAAQC,8BAAY;EAwB5CC,YACEC,MAAkB,EAClBC,IAAU,EACVC,iBAA0B,EAC1BC,eAAgC;IAEhC,KAAK,EAAE;;IA7BTC;IACAC;IACAC;IACAC,2CAAsB,IAAIC,GAAG,EAA4B;IACzDC,uCAAkB,IAAIC,GAAG,EAAU;IACnCC;IACA;;;IAGA,eAAU,GAAG,IAAIC,wBAAS,EAAE;IAqB1BC,2BAAI,wBAAWb,MAAM;IACrBa,2BAAI,sBAASZ,IAAI;IACjBY,2BAAI,gCAAmB,IAAIC,kCAAc,CAACd,MAAM,EAAEE,iBAAiB,EAAE,IAAI,CAAC;IAC1EW,2BAAI,iCAAoBV,eAAe;IACvC,IAAI,CAACY,mBAAmB,CAACC,2BAAI,4BAAQ,CAAC;EACxC;EAxBA,IAAIb,eAAe;IACjB,OAAOa,2BAAI,qCAAiB;EAC9B;EAEA,IAAIC,cAAc;IAChB,OAAOD,2BAAI,oCAAgB;EAC7B;EAEA,IAAIhB,MAAM;IACR,OAAOgB,2BAAI,4BAAQ;EACrB;EAgBQD,mBAAmB,CAACG,OAAmB;IAC7CA,OAAO,CAACC,EAAE,CAAC,oBAAoB,EAAEC,KAAK,IAAG;MACvCJ,2BAAI,8DAAiB,MAArB,IAAI,EAAkBE,OAAO,EAAEE,KAAK,CAACC,OAAO,EAAED,KAAK,CAACE,aAAa,CAAC;IACpE,CAAC,CAAC;IACFJ,OAAO,CAACC,EAAE,CAAC,qBAAqB,EAAEC,KAAK,IAAG;MACxCJ,2BAAI,+DAAkB,MAAtB,IAAI,EAAmBI,KAAK,CAACG,KAAK,CAAC;IACrC,CAAC,CAAC;IACFL,OAAO,CAACC,EAAE,CAAC,8BAA8B,EAAEC,KAAK,IAAG;MACjDJ,2BAAI,6EAAgC,MAApC,IAAI,EAAiCI,KAAK,CAACC,OAAO,EAAED,KAAK,CAACI,GAAG,CAAC;IAChE,CAAC,CAAC;IACFN,OAAO,CAACC,EAAE,CACR,oBAAoB,EACnBC,KAAuC,IAAI;MAC1CJ,2BAAI,8DAAiB,MAArB,IAAI,EACFI,KAAK,CAACC,OAAO,EACbD,KAAK,CAACK,MAAgD,CACvD;IACH,CAAC,CACF;IACDP,OAAO,CAACC,EAAE,CAAC,0BAA0B,EAAEC,KAAK,IAAG;MAC7CJ,2BAAI,oEAAuB,MAA3B,IAAI,EAAwBI,KAAK,CAACC,OAAO,CAAC;IAC5C,CAAC,CAAC;IACFH,OAAO,CAACC,EAAE,CAAC,0BAA0B,EAAEC,KAAK,IAAG;MAC7CJ,2BAAI,oEAAuB,MAA3B,IAAI,EAAwBI,KAAK,CAACC,OAAO,CAAC;IAC5C,CAAC,CAAC;IACFH,OAAO,CAACC,EAAE,CAAC,iCAAiC,EAAEC,KAAK,IAAG;MACpDJ,2BAAI,wEAA2B,MAA/B,IAAI,EAA4BI,KAAK,CAACM,OAAO,EAAER,OAAO,CAAC;IACzD,CAAC,CAAC;IACFA,OAAO,CAACC,EAAE,CAAC,mCAAmC,EAAEC,KAAK,IAAG;MACtDJ,2BAAI,0EAA6B,MAAjC,IAAI,EAA8BI,KAAK,CAACO,kBAAkB,EAAET,OAAO,CAAC;IACtE,CAAC,CAAC;IACFA,OAAO,CAACC,EAAE,CAAC,kCAAkC,EAAE,MAAK;MAClDH,2BAAI,yEAA4B,MAAhC,IAAI,EAA6BE,OAAO,CAAC;IAC3C,CAAC,CAAC;IACFA,OAAO,CAACC,EAAE,CAAC,qBAAqB,EAAEC,KAAK,IAAG;MACxCJ,2BAAI,+DAAkB,MAAtB,IAAI,EAAmBI,KAAK,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEA,MAAMQ,UAAU,GAAkC;IAAA,IAAjC5B,6EAAqBgB,2BAAI,4BAAQ;IAChD,IAAI;MACF,MAAMa,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC/B/B,MAAM,CAACgC,IAAI,CAAC,aAAa,CAAC,EAC1BhC,MAAM,CAACgC,IAAI,CAAC,mBAAmB,CAAC,CACjC,CAAC;MAEF,MAAM;QAACC;MAAS,CAAC,GAAGJ,MAAM,CAAC,CAAC,CAAC;MAC7Bb,2BAAI,8DAAiB,MAArB,IAAI,EAAkBhB,MAAM,EAAEiC,SAAS,CAAC;MACxC,MAAMH,OAAO,CAACC,GAAG,CAAC,CAChB/B,MAAM,CAACgC,IAAI,CAAC,gCAAgC,EAAE;QAACE,OAAO,EAAE;MAAI,CAAC,CAAC,EAC9DlC,MAAM,CAACgC,IAAI,CAAC,gBAAgB,CAAC,CAACG,IAAI,CAAC,MAAK;QACtC,OAAOnB,2BAAI,kEAAqB,MAAzB,IAAI,EAAsBhB,MAAM,EAAEd,kBAAkB,CAAC;MAC9D,CAAC,CAAC;MACF;MACAc,MAAM,KAAKgB,2BAAI,4BAAQ,GACnBA,2BAAI,oCAAgB,CAACY,UAAU,EAAE,GACjCE,OAAO,CAACM,OAAO,EAAE,CACtB,CAAC;KACH,CAAC,OAAOC,KAAK,EAAE;MACd;MACA,IAAI,8BAAW,EAACA,KAAK,CAAC,IAAI,uCAAmB,EAACA,KAAK,CAAC,EAAE;QACpD;;MAGF,MAAMA,KAAK;;EAEf;EAEAC,oBAAoB,CAClBC,SAAiB,EACiB;IAAA,IAAlCrB,8EAAsBF,2BAAI,4BAAQ;IAElC,MAAMwB,GAAG,GAAG,GAAGtB,OAAO,CAACuB,EAAE,EAAE,IAAIF,SAAS,EAAE;IAC1C,MAAMb,OAAO,GAAGV,2BAAI,wCAAoB,CAAC0B,GAAG,CAACF,GAAG,CAAC;IACjD,sBAAM,EAACd,OAAO,EAAE,4CAA4C,GAAGa,SAAS,CAAC;IACzE,OAAOb,OAAO;EAChB;EAEAzB,IAAI;IACF,OAAOe,2BAAI,0BAAM;EACnB;EAEA2B,SAAS;IACP,MAAMA,SAAS,GAAG,IAAI,CAACC,UAAU,CAACC,YAAY,EAAE;IAChD,sBAAM,EAACF,SAAS,EAAE,kCAAkC,CAAC;IACrD,OAAOA,SAAS;EAClB;EAEAG,MAAM;IACJ,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACE,MAAM,EAAE,CAAC;EAC7C;EAEAvB,KAAK,CAACF,OAAe;IACnB,OAAO,IAAI,CAACuB,UAAU,CAACK,OAAO,CAAC5B,OAAO,CAAC,IAAI,IAAI;EACjD;EAEA6B,kBAAkB,CAACC,MAAc;IAC/B,IAAIA,MAAM,CAACC,cAAc,EAAE,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC7C;;IAGF,MAAM9B,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACC,cAAc,EAAE,CAACE,QAAQ,CAAC;IAC1D,IAAI/B,KAAK,EAAE;MACTA,KAAK,CAACgC,YAAY,CAACJ,MAAM,CAACK,QAAQ,EAAG,CAAC;;IAExC,IAAI,CAACzC,mBAAmB,CAACoC,MAAM,CAACK,QAAQ,EAAG,CAAC;IAC5C,IAAI,CAAC5B,UAAU,CAACuB,MAAM,CAACK,QAAQ,EAAE,CAAC;EACpC;EAEAC,oBAAoB,CAACN,MAAc;IACjC,MAAM5B,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACO,SAAS,CAAC;IAC1C,IAAInC,KAAK,IAAIA,KAAK,CAACoC,UAAU,EAAE,EAAE;MAC/B;MACA;MACA3C,2BAAI,sEAAyB,MAA7B,IAAI,EAA0BO,KAAK,CAAC;;EAExC;;AA1JFpC;yXA4JoBiC,KAAwC;EACxD,MAAMG,KAAK,GAAG,IAAI,CAACA,KAAK,CAACH,KAAK,CAACC,OAAO,CAAC;EACvC,IAAI,CAACE,KAAK,EAAE;IACV;;EAEFA,KAAK,CAACqC,iBAAiB,CAACxC,KAAK,CAACyC,QAAQ,EAAEzC,KAAK,CAAC0C,IAAI,CAAC;EACnD,IAAI,CAACC,IAAI,CAAC5E,iCAAyB,CAACM,cAAc,EAAE8B,KAAK,CAAC;AAC5D,CAAC,qFAEsBF,OAAe;EACpC,MAAME,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,OAAO,CAAC;EACjC,IAAI,CAACE,KAAK,EAAE;IACV;;EAEFA,KAAK,CAACyC,iBAAiB,EAAE;AAC3B,CAAC,qFAEsB3C,OAAe;EACpC,MAAME,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,OAAO,CAAC;EACjC,IAAI,CAACE,KAAK,EAAE;IACV;;EAEFA,KAAK,CAAC0C,iBAAiB,EAAE;EACzB,IAAI,CAACF,IAAI,CAAC5E,iCAAyB,CAACM,cAAc,EAAE8B,KAAK,CAAC;AAC5D,CAAC,yEAGCL,OAAmB,EACnBe,SAAkC;EAElC,IAAIA,SAAS,CAACV,KAAK,CAAC2C,QAAQ,EAAE;IAC5BlD,2BAAI,8DAAiB,MAArB,IAAI,EACFE,OAAO,EACPe,SAAS,CAACV,KAAK,CAACkB,EAAE,EAClBR,SAAS,CAACV,KAAK,CAAC2C,QAAQ,CACzB;;EAEHlD,2BAAI,+DAAkB,MAAtB,IAAI,EAAmBiB,SAAS,CAACV,KAAK,CAAC;EACvC,IAAI,CAACU,SAAS,CAACkC,WAAW,EAAE;IAC1B;;EAGF,KAAK,MAAMC,KAAK,IAAInC,SAAS,CAACkC,WAAW,EAAE;IACzCnD,2BAAI,8DAAiB,MAArB,IAAI,EAAkBE,OAAO,EAAEkD,KAAK,CAAC;;AAEzC,CAAC,yEAGClD,OAAmB,EACnBG,OAAe,EACfC,aAAqB;EAErB,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,OAAO,CAAC;EAC/B,IAAIE,KAAK,EAAE;IACT,IAAIL,OAAO,IAAIK,KAAK,CAACoC,UAAU,EAAE,EAAE;MACjC;MACA;MACA;MACApC,KAAK,CAACgC,YAAY,CAACrC,OAAO,CAAC;;IAE7B;;EAGFK,KAAK,GAAG,IAAI8C,gBAAK,CAAC,IAAI,EAAEhD,OAAO,EAAEC,aAAa,EAAEJ,OAAO,CAAC;EACxD,IAAI,CAAC0B,UAAU,CAAC0B,QAAQ,CAAC/C,KAAK,CAAC;EAC/B,IAAI,CAACwC,IAAI,CAAC5E,iCAAyB,CAACC,aAAa,EAAEmC,KAAK,CAAC;AAC3D,CAAC,mCAED,eAAKgD,+BAAmBC,YAAiC;EACvD,MAAMnD,OAAO,GAAGmD,YAAY,CAAC/B,EAAE;EAC/B,MAAMgC,WAAW,GAAG,CAACD,YAAY,CAACN,QAAQ;EAE1C,IAAI3C,KAAK,GAAG,IAAI,CAACqB,UAAU,CAACK,OAAO,CAAC5B,OAAO,CAAC;EAE5C;EACA,IAAIE,KAAK,EAAE;IACT,KAAK,MAAM6C,KAAK,IAAI7C,KAAK,CAAC4C,WAAW,EAAE,EAAE;MACvCnD,2BAAI,sEAAyB,MAA7B,IAAI,EAA0BoD,KAAK,CAAC;;;EAIxC;EACA,IAAIK,WAAW,EAAE;IACf,IAAIlD,KAAK,EAAE;MACT;MACA,IAAI,CAACqB,UAAU,CAAC8B,WAAW,CAACnD,KAAK,CAAC;MAClCA,KAAK,CAACoD,GAAG,GAAGtD,OAAO;KACpB,MAAM;MACL;MACAE,KAAK,GAAG,IAAI8C,gBAAK,CAAC,IAAI,EAAEhD,OAAO,EAAEuD,SAAS,EAAE5D,2BAAI,4BAAQ,CAAC;;IAE3D,IAAI,CAAC4B,UAAU,CAAC0B,QAAQ,CAAC/C,KAAK,CAAC;;EAGjCA,KAAK,GAAG,MAAM,IAAI,CAACqB,UAAU,CAACiC,YAAY,CAACxD,OAAO,CAAC;EACnDE,KAAK,CAACuD,UAAU,CAACN,YAAY,CAAC;EAC9B,IAAI,CAACT,IAAI,CAAC5E,iCAAyB,CAACG,cAAc,EAAEiC,KAAK,CAAC;AAC5D,CAAC,sCAED,eAAKwD,kCAAsB7D,OAAmB,EAAE4C,IAAY;EAC1D,MAAMtB,GAAG,GAAG,GAAGtB,OAAO,CAACuB,EAAE,EAAE,IAAIqB,IAAI,EAAE;EAErC,IAAI9C,2BAAI,oCAAgB,CAACgE,GAAG,CAACxC,GAAG,CAAC,EAAE;IACjC;;EAGF,MAAMtB,OAAO,CAACc,IAAI,CAAC,uCAAuC,EAAE;IAC1DiD,MAAM,EAAE,iBAAiBC,2CAAqB,EAAE;IAChDC,SAAS,EAAErB;GACZ,CAAC;EAEF,MAAMhC,OAAO,CAACC,GAAG,CACf,IAAI,CAACe,MAAM,EAAE,CACVsC,MAAM,CAAC7D,KAAK,IAAG;IACd,OAAOA,KAAK,CAAC8D,OAAO,EAAE,KAAKnE,OAAO;EACpC,CAAC,CAAC,CACDoE,GAAG,CAAC/D,KAAK,IAAG;IACX;IACA;IACA,OAAOL,OAAO,CACXc,IAAI,CAAC,0BAA0B,EAAE;MAChCX,OAAO,EAAEE,KAAK,CAACoD,GAAG;MAClBQ,SAAS,EAAErB,IAAI;MACfyB,mBAAmB,EAAE;KACtB,CAAC,CACDC,KAAK,CAACC,oBAAU,CAAC;EACtB,CAAC,CAAC,CACL;EAEDzE,2BAAI,oCAAgB,CAAC0E,GAAG,CAAClD,GAAG,CAAC;AAC/B,CAAC,uGAE+BnB,OAAe,EAAEG,GAAW;EAC1D,MAAMD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,OAAO,CAAC;EACjC,IAAI,CAACE,KAAK,EAAE;IACV;;EAEFA,KAAK,CAACoE,wBAAwB,CAACnE,GAAG,CAAC;EACnC,IAAI,CAACuC,IAAI,CAAC5E,iCAAyB,CAACO,4BAA4B,EAAE6B,KAAK,CAAC;EACxE,IAAI,CAACwC,IAAI,CAAC5E,iCAAyB,CAACG,cAAc,EAAEiC,KAAK,CAAC;AAC5D,CAAC,yEAGCF,OAAe,EACfI,MAA8C;EAE9C,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,OAAO,CAAC;EACjC,IAAII,MAAM,KAAK,QAAQ,EAAE;IACvB;IACA;IACA;IACA,IAAIF,KAAK,EAAE;MACTP,2BAAI,sEAAyB,MAA7B,IAAI,EAA0BO,KAAK,CAAC;;GAEvC,MAAM,IAAIE,MAAM,KAAK,MAAM,EAAE;IAC5B,IAAI,CAACsC,IAAI,CAAC5E,iCAAyB,CAACK,YAAY,EAAE+B,KAAK,CAAC;;AAE5D,CAAC,6FAGCqE,cAA4D,EAC5D1E,OAAmB;EAEnB,MAAM2E,OAAO,GAAGD,cAAc,CAACC,OAAyC;EACxE,MAAMxE,OAAO,GAAGwE,OAAO,IAAIA,OAAO,CAACxE,OAAO;EAC1C,MAAME,KAAK,GAAG,OAAOF,OAAO,KAAK,QAAQ,GAAG,IAAI,CAACE,KAAK,CAACF,OAAO,CAAC,GAAGuD,SAAS;EAC3E,IAAIkB,KAAgC;EACpC,IAAIvE,KAAK,EAAE;IACT;IACA,IAAIA,KAAK,CAAC8D,OAAO,EAAE,KAAKnE,OAAO,EAAE;MAC/B;;IAGF,IAAI0E,cAAc,CAACC,OAAO,IAAI,CAAC,CAACD,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;MACnEC,KAAK,GAAGvE,KAAK,CAACwE,MAAM,CAACC,6BAAU,CAAC;KACjC,MAAM,IACLJ,cAAc,CAAC9B,IAAI,KAAK5E,kBAAkB,IAC1C,CAACqC,KAAK,CAACwE,MAAM,CAACC,kCAAe,CAAC,CAACC,UAAU,EAAE,EAC3C;MACA;MACA;MACA;MACAH,KAAK,GAAGvE,KAAK,CAACwE,MAAM,CAACC,kCAAe,CAAC;;;EAGzC,MAAMtE,OAAO,GAAG,IAAIwD,sCAAgB,CAClC,MAAK,aAAL3D,KAAK,uBAALA,KAAK,CAAE8D,OAAO,EAAE,KAAIrE,2BAAI,4BAAQ,EAChC4E,cAAc,EACdE,KAAK,CACN;EACD,IAAIA,KAAK,EAAE;IACTA,KAAK,CAACI,UAAU,CAACxE,OAAO,CAAC;;EAE3B,MAAMc,GAAG,GAAG,GAAGtB,OAAO,CAACuB,EAAE,EAAE,IAAImD,cAAc,CAACnD,EAAE,EAAE;EAClDzB,2BAAI,wCAAoB,CAACmF,GAAG,CAAC3D,GAAG,EAAEd,OAAO,CAAC;AAC5C,CAAC,iGAGCC,kBAA0B,EAC1BT,OAAmB;EAEnB,MAAMsB,GAAG,GAAG,GAAGtB,OAAO,CAACuB,EAAE,EAAE,IAAId,kBAAkB,EAAE;EACnD,MAAMD,OAAO,GAAGV,2BAAI,wCAAoB,CAAC0B,GAAG,CAACF,GAAG,CAAC;EACjD,IAAI,CAACd,OAAO,EAAE;IACZ;;EAEFV,2BAAI,wCAAoB,CAACoF,MAAM,CAAC5D,GAAG,CAAC;EACpC,IAAId,OAAO,CAAC2E,MAAM,EAAE;IAClB3E,OAAO,CAAC2E,MAAM,CAACC,YAAY,EAAE;;AAEjC,CAAC,+FAE2BpF,OAAmB;EAC7C,KAAK,MAAM,CAACsB,GAAG,EAAEd,OAAO,CAAC,IAAIV,2BAAI,wCAAoB,CAACuF,OAAO,EAAE,EAAE;IAC/D;IACA;IACA,IAAI7E,OAAO,CAAC2D,OAAO,KAAKnE,OAAO,EAAE;MAC/B;;IAEF,IAAIQ,OAAO,CAAC2E,MAAM,EAAE;MAClB3E,OAAO,CAAC2E,MAAM,CAACC,YAAY,EAAE;;IAE/BtF,2BAAI,wCAAoB,CAACoF,MAAM,CAAC5D,GAAG,CAAC;;AAExC,CAAC,yFAEwBjB,KAAY;EACnC,KAAK,MAAM6C,KAAK,IAAI7C,KAAK,CAAC4C,WAAW,EAAE,EAAE;IACvCnD,2BAAI,sEAAyB,MAA7B,IAAI,EAA0BoD,KAAK,CAAC;;EAEtC7C,KAAK,CAACiF,OAAO,EAAE;EACf,IAAI,CAAC5D,UAAU,CAAC8B,WAAW,CAACnD,KAAK,CAAC;EAClC,IAAI,CAACwC,IAAI,CAAC5E,iCAAyB,CAACI,aAAa,EAAEgC,KAAK,CAAC;AAC3D,CAAC","names":["UTILITY_WORLD_NAME","exports","FrameAttached","Symbol","FrameNavigated","FrameDetached","FrameSwapped","LifecycleEvent","FrameNavigatedWithinDocument","ExecutionContextCreated","ExecutionContextDestroyed","FrameManager","EventEmitter_js_1","constructor","client","page","ignoreHTTPSErrors","timeoutSettings","_FrameManager_page","_FrameManager_networkManager","_FrameManager_timeoutSettings","_FrameManager_contextIdToContext","Map","_FrameManager_isolatedWorlds","Set","_FrameManager_client","FrameTree_js_1","__classPrivateFieldSet","NetworkManager_js_1","setupEventListeners","__classPrivateFieldGet","networkManager","session","on","event","frameId","parentFrameId","frame","url","reason","context","executionContextId","initialize","result","Promise","all","send","frameTree","enabled","then","resolve","error","executionContextById","contextId","key","id","get","mainFrame","_frameTree","getMainFrame","frames","Array","from","getById","onAttachedToTarget","target","_getTargetInfo","type","targetId","updateClient","_session","onDetachedFromTarget","_targetId","isOOPFrame","_onLifecycleEvent","loaderId","name","emit","_onLoadingStarted","_onLoadingStopped","parentId","childFrames","child","Frame_js_1","addFrame","_FrameManager_onFrameNavigated","framePayload","isMainFrame","removeFrame","_id","undefined","waitForFrame","_navigated","_FrameManager_createIsolatedWorld","has","source","ExecutionContext_js_1","worldName","filter","_client","map","grantUniveralAccess","catch","util_js_1","add","_navigatedWithinDocument","contextPayload","auxData","world","worlds","IsolatedWorld_js_1","hasContext","setContext","set","delete","_world","clearContext","entries","_detach"],"sources":["../../../../src/common/FrameManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}