{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { accessSync, existsSync } from 'fs';\nimport os from 'os';\nimport { BrowserFetcher } from './BrowserFetcher.js';\nimport { ChromeLauncher } from './ChromeLauncher.js';\nimport { FirefoxLauncher } from './FirefoxLauncher.js';\n/**\n * @internal\n */\nexport function executablePathForChannel(channel) {\n  const platform = os.platform();\n  let chromePath;\n  switch (platform) {\n    case 'win32':\n      switch (channel) {\n        case 'chrome':\n          chromePath = `${process.env['PROGRAMFILES']}\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe`;\n          break;\n        case 'chrome-beta':\n          chromePath = `${process.env['PROGRAMFILES']}\\\\Google\\\\Chrome Beta\\\\Application\\\\chrome.exe`;\n          break;\n        case 'chrome-canary':\n          chromePath = `${process.env['PROGRAMFILES']}\\\\Google\\\\Chrome SxS\\\\Application\\\\chrome.exe`;\n          break;\n        case 'chrome-dev':\n          chromePath = `${process.env['PROGRAMFILES']}\\\\Google\\\\Chrome Dev\\\\Application\\\\chrome.exe`;\n          break;\n      }\n      break;\n    case 'darwin':\n      switch (channel) {\n        case 'chrome':\n          chromePath = '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome';\n          break;\n        case 'chrome-beta':\n          chromePath = '/Applications/Google Chrome Beta.app/Contents/MacOS/Google Chrome Beta';\n          break;\n        case 'chrome-canary':\n          chromePath = '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary';\n          break;\n        case 'chrome-dev':\n          chromePath = '/Applications/Google Chrome Dev.app/Contents/MacOS/Google Chrome Dev';\n          break;\n      }\n      break;\n    case 'linux':\n      switch (channel) {\n        case 'chrome':\n          chromePath = '/opt/google/chrome/chrome';\n          break;\n        case 'chrome-beta':\n          chromePath = '/opt/google/chrome-beta/chrome';\n          break;\n        case 'chrome-dev':\n          chromePath = '/opt/google/chrome-unstable/chrome';\n          break;\n      }\n      break;\n  }\n  if (!chromePath) {\n    throw new Error(`Unable to detect browser executable path for '${channel}' on ${platform}.`);\n  }\n  // Check if Chrome exists and is accessible.\n  try {\n    accessSync(chromePath);\n  } catch (error) {\n    throw new Error(`Could not find Google Chrome executable for channel '${channel}' at '${chromePath}'.`);\n  }\n  return chromePath;\n}\n/**\n * @internal\n */\nexport function resolveExecutablePath(launcher) {\n  const {\n    product,\n    _isPuppeteerCore,\n    _preferredRevision\n  } = launcher;\n  let downloadPath;\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!_isPuppeteerCore) {\n    const executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'] || process.env['npm_config_puppeteer_executable_path'] || process.env['npm_package_config_puppeteer_executable_path'];\n    if (executablePath) {\n      const missingText = !existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : undefined;\n      return {\n        executablePath,\n        missingText\n      };\n    }\n    const ubuntuChromiumPath = '/usr/bin/chromium-browser';\n    if (product === 'chrome' && os.platform() !== 'darwin' && os.arch() === 'arm64' && existsSync(ubuntuChromiumPath)) {\n      return {\n        executablePath: ubuntuChromiumPath,\n        missingText: undefined\n      };\n    }\n    downloadPath = process.env['PUPPETEER_DOWNLOAD_PATH'] || process.env['npm_config_puppeteer_download_path'] || process.env['npm_package_config_puppeteer_download_path'];\n  }\n  const browserFetcher = new BrowserFetcher({\n    product: product,\n    path: downloadPath\n  });\n  if (!_isPuppeteerCore) {\n    let revision = process.env['PUPPETEER_BROWSER_REVISION'];\n    if (product === 'chrome') {\n      revision !== null && revision !== void 0 ? revision : revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n    }\n    if (revision) {\n      const revisionInfo = browserFetcher.revisionInfo(revision);\n      const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : undefined;\n      return {\n        executablePath: revisionInfo.executablePath,\n        missingText\n      };\n    }\n  }\n  const revisionInfo = browserFetcher.revisionInfo(_preferredRevision);\n  const firefoxHelp = `Run \\`PUPPETEER_PRODUCT=firefox npm install\\` to download a supported Firefox browser binary.`;\n  const chromeHelp = `Run \\`npm install\\` to download the correct Chromium revision (${launcher._preferredRevision}).`;\n  const missingText = !revisionInfo.local ? `Could not find expected browser (${product}) locally. ${product === 'chrome' ? chromeHelp : firefoxHelp}` : undefined;\n  return {\n    executablePath: revisionInfo.executablePath,\n    missingText\n  };\n}\n/**\n * @internal\n */\nexport function createLauncher(preferredRevision, isPuppeteerCore) {\n  let product = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'chrome';\n  switch (product) {\n    case 'firefox':\n      return new FirefoxLauncher(preferredRevision, isPuppeteerCore);\n    case 'chrome':\n      return new ChromeLauncher(preferredRevision, isPuppeteerCore);\n    default:\n      throw new Error(`Unknown product: ${product}`);\n  }\n}","map":{"version":3,"mappings":"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","names":["accessSync","existsSync","os","BrowserFetcher","ChromeLauncher","FirefoxLauncher","executablePathForChannel","channel","platform","chromePath","process","env","Error","error","resolveExecutablePath","launcher","product","_isPuppeteerCore","_preferredRevision","downloadPath","executablePath","missingText","undefined","ubuntuChromiumPath","arch","browserFetcher","path","revision","revisionInfo","local","firefoxHelp","chromeHelp","createLauncher","preferredRevision","isPuppeteerCore"],"sources":["../../../../src/node/ProductLauncher.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}