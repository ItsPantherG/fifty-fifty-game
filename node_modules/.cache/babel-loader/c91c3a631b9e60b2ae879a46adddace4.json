{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getQueryHandlerAndSelector = exports.clearCustomQueryHandlers = exports.customQueryHandlerNames = exports.unregisterCustomQueryHandler = exports.registerCustomQueryHandler = void 0;\nconst AriaQueryHandler_js_1 = require(\"./AriaQueryHandler.js\");\nconst ElementHandle_js_1 = require(\"./ElementHandle.js\");\nconst Frame_js_1 = require(\"./Frame.js\");\nconst IsolatedWorld_js_1 = require(\"./IsolatedWorld.js\");\nfunction createPuppeteerQueryHandler(handler) {\n  const internalHandler = {};\n  if (handler.queryOne) {\n    const queryOne = handler.queryOne;\n    internalHandler.queryOne = async (element, selector) => {\n      const jsHandle = await element.evaluateHandle(queryOne, selector, await element.executionContext()._world.puppeteerUtil);\n      const elementHandle = jsHandle.asElement();\n      if (elementHandle) {\n        return elementHandle;\n      }\n      await jsHandle.dispose();\n      return null;\n    };\n    internalHandler.waitFor = async (elementOrFrame, selector, options) => {\n      let frame;\n      let element;\n      if (elementOrFrame instanceof Frame_js_1.Frame) {\n        frame = elementOrFrame;\n      } else {\n        frame = elementOrFrame.frame;\n        element = await frame.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].adoptHandle(elementOrFrame);\n      }\n      const result = await frame.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD]._waitForSelectorInPage(queryOne, element, selector, options);\n      if (element) {\n        await element.dispose();\n      }\n      if (!result) {\n        return null;\n      }\n      if (!(result instanceof ElementHandle_js_1.ElementHandle)) {\n        await result.dispose();\n        return null;\n      }\n      return frame.worlds[IsolatedWorld_js_1.MAIN_WORLD].transferHandle(result);\n    };\n  }\n  if (handler.queryAll) {\n    const queryAll = handler.queryAll;\n    internalHandler.queryAll = async (element, selector) => {\n      const jsHandle = await element.evaluateHandle(queryAll, selector, await element.executionContext()._world.puppeteerUtil);\n      const properties = await jsHandle.getProperties();\n      await jsHandle.dispose();\n      const result = [];\n      for (const property of properties.values()) {\n        const elementHandle = property.asElement();\n        if (elementHandle) {\n          result.push(elementHandle);\n        }\n      }\n      return result;\n    };\n  }\n  return internalHandler;\n}\nconst defaultHandler = createPuppeteerQueryHandler({\n  queryOne: (element, selector) => {\n    if (!('querySelector' in element)) {\n      throw new Error(`Could not invoke \\`querySelector\\` on node of type ${element.nodeName}.`);\n    }\n    return element.querySelector(selector);\n  },\n  queryAll: (element, selector) => {\n    if (!('querySelectorAll' in element)) {\n      throw new Error(`Could not invoke \\`querySelectorAll\\` on node of type ${element.nodeName}.`);\n    }\n    return [...element.querySelectorAll(selector)];\n  }\n});\nconst pierceHandler = createPuppeteerQueryHandler({\n  queryOne: (element, selector, _ref) => {\n    let {\n      pierceQuerySelector\n    } = _ref;\n    return pierceQuerySelector(element, selector);\n  },\n  queryAll: (element, selector, _ref2) => {\n    let {\n      pierceQuerySelectorAll\n    } = _ref2;\n    return pierceQuerySelectorAll(element, selector);\n  }\n});\nconst xpathHandler = createPuppeteerQueryHandler({\n  queryOne: (element, selector, _ref3) => {\n    let {\n      xpathQuerySelector\n    } = _ref3;\n    return xpathQuerySelector(element, selector);\n  },\n  queryAll: (element, selector, _ref4) => {\n    let {\n      xpathQuerySelectorAll\n    } = _ref4;\n    return xpathQuerySelectorAll(element, selector);\n  }\n});\nconst textQueryHandler = createPuppeteerQueryHandler({\n  queryOne: (element, selector, _ref5) => {\n    let {\n      textQuerySelector\n    } = _ref5;\n    return textQuerySelector(element, selector);\n  },\n  queryAll: (element, selector, _ref6) => {\n    let {\n      textQuerySelectorAll\n    } = _ref6;\n    return textQuerySelectorAll(element, selector);\n  }\n});\nconst INTERNAL_QUERY_HANDLERS = new Map([['aria', {\n  handler: AriaQueryHandler_js_1.ariaHandler\n}], ['pierce', {\n  handler: pierceHandler\n}], ['xpath', {\n  handler: xpathHandler\n}], ['text', {\n  handler: textQueryHandler\n}]]);\nconst QUERY_HANDLERS = new Map();\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.registerCustomQueryHandler}\n *\n * @public\n */\nfunction registerCustomQueryHandler(name, handler) {\n  if (INTERNAL_QUERY_HANDLERS.has(name)) {\n    throw new Error(`A query handler named \"${name}\" already exists`);\n  }\n  if (QUERY_HANDLERS.has(name)) {\n    throw new Error(`A custom query handler named \"${name}\" already exists`);\n  }\n  const isValidName = /^[a-zA-Z]+$/.test(name);\n  if (!isValidName) {\n    throw new Error(`Custom query handler names may only contain [a-zA-Z]`);\n  }\n  QUERY_HANDLERS.set(name, {\n    handler: createPuppeteerQueryHandler(handler)\n  });\n}\nexports.registerCustomQueryHandler = registerCustomQueryHandler;\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.unregisterCustomQueryHandler}\n *\n * @public\n */\nfunction unregisterCustomQueryHandler(name) {\n  QUERY_HANDLERS.delete(name);\n}\nexports.unregisterCustomQueryHandler = unregisterCustomQueryHandler;\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.customQueryHandlerNames}\n *\n * @public\n */\nfunction customQueryHandlerNames() {\n  return [...QUERY_HANDLERS.keys()];\n}\nexports.customQueryHandlerNames = customQueryHandlerNames;\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.clearCustomQueryHandlers}\n *\n * @public\n */\nfunction clearCustomQueryHandlers() {\n  QUERY_HANDLERS.clear();\n}\nexports.clearCustomQueryHandlers = clearCustomQueryHandlers;\nconst CUSTOM_QUERY_SEPARATORS = ['=', '/'];\n/**\n * @internal\n */\nfunction getQueryHandlerAndSelector(selector) {\n  for (const handlerMap of [QUERY_HANDLERS, INTERNAL_QUERY_HANDLERS]) {\n    for (const [name, {\n      handler: queryHandler,\n      transformSelector\n    }] of handlerMap) {\n      for (const separator of CUSTOM_QUERY_SEPARATORS) {\n        const prefix = `${name}${separator}`;\n        if (selector.startsWith(prefix)) {\n          selector = selector.slice(prefix.length);\n          if (transformSelector) {\n            selector = transformSelector(selector);\n          }\n          return {\n            updatedSelector: selector,\n            queryHandler\n          };\n        }\n      }\n    }\n  }\n  return {\n    updatedSelector: selector,\n    queryHandler: defaultHandler\n  };\n}\nexports.getQueryHandlerAndSelector = getQueryHandlerAndSelector;","map":{"version":3,"mappings":"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","names":["createPuppeteerQueryHandler","handler","internalHandler","queryOne","element","selector","jsHandle","evaluateHandle","executionContext","_world","puppeteerUtil","elementHandle","asElement","dispose","waitFor","elementOrFrame","options","frame","Frame_js_1","worlds","IsolatedWorld_js_1","adoptHandle","result","_waitForSelectorInPage","ElementHandle_js_1","transferHandle","queryAll","properties","getProperties","property","values","push","defaultHandler","Error","nodeName","querySelector","querySelectorAll","pierceHandler","pierceQuerySelector","pierceQuerySelectorAll","xpathHandler","xpathQuerySelector","xpathQuerySelectorAll","textQueryHandler","textQuerySelector","textQuerySelectorAll","INTERNAL_QUERY_HANDLERS","Map","AriaQueryHandler_js_1","QUERY_HANDLERS","registerCustomQueryHandler","name","has","isValidName","test","set","exports","unregisterCustomQueryHandler","delete","customQueryHandlerNames","keys","clearCustomQueryHandlers","clear","CUSTOM_QUERY_SEPARATORS","getQueryHandlerAndSelector","handlerMap","queryHandler","transformSelector","separator","prefix","startsWith","slice","length","updatedSelector"],"sources":["../../../../src/common/QueryHandler.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}