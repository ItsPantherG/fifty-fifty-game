{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _BrowserFetcher_instances, _BrowserFetcher_product, _BrowserFetcher_downloadFolder, _BrowserFetcher_downloadHost, _BrowserFetcher_platform, _BrowserFetcher_getFolderPath;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserFetcher = void 0;\nconst child_process_1 = require(\"child_process\");\nconst extract_zip_1 = __importDefault(require(\"extract-zip\"));\nconst fs_1 = require(\"fs\");\nconst promises_1 = require(\"fs/promises\");\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst proxy_from_env_1 = require(\"proxy-from-env\");\nconst rimraf_1 = __importDefault(require(\"rimraf\"));\nconst tar_fs_1 = __importDefault(require(\"tar-fs\"));\nconst unbzip2_stream_1 = __importDefault(require(\"unbzip2-stream\"));\nconst URL = __importStar(require(\"url\"));\nconst util = __importStar(require(\"util\"));\nconst util_1 = require(\"util\");\nconst Debug_js_1 = require(\"../common/Debug.js\");\nconst constants_js_1 = require(\"../constants.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst experimentalChromiumMacArm = process.env['PUPPETEER_EXPERIMENTAL_CHROMIUM_MAC_ARM'] || process.env['npm_config_puppeteer_experimental_chromium_mac_arm'];\nconst debugFetcher = (0, Debug_js_1.debug)('puppeteer:fetcher');\nconst downloadURLs = {\n  chrome: {\n    linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n    mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n    mac_arm: '%s/chromium-browser-snapshots/Mac_Arm/%d/%s.zip',\n    win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n    win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip'\n  },\n  firefox: {\n    linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',\n    mac: '%s/firefox-%s.en-US.%s.dmg',\n    win32: '%s/firefox-%s.en-US.%s.zip',\n    win64: '%s/firefox-%s.en-US.%s.zip'\n  }\n};\nconst browserConfig = {\n  chrome: {\n    host: 'https://storage.googleapis.com'\n  },\n  firefox: {\n    host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central'\n  }\n};\nconst exec = (0, util_1.promisify)(child_process_1.exec);\nfunction archiveName(product, platform, revision) {\n  switch (product) {\n    case 'chrome':\n      switch (platform) {\n        case 'linux':\n          return 'chrome-linux';\n        case 'mac_arm':\n        case 'mac':\n          return 'chrome-mac';\n        case 'win32':\n        case 'win64':\n          // Windows archive name changed at r591479.\n          return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n      }\n    case 'firefox':\n      return platform;\n  }\n}\nfunction downloadURL(product, platform, host, revision) {\n  const url = util.format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));\n  return url;\n}\nfunction handleArm64() {\n  let exists = (0, fs_1.existsSync)('/usr/bin/chromium-browser');\n  if (exists) {\n    return;\n  }\n  exists = (0, fs_1.existsSync)('/usr/bin/chromium');\n  if (exists) {\n    return;\n  }\n  console.error('The chromium binary is not available for arm64.' + '\\nIf you are on Ubuntu, you can install with: ' + '\\n\\n sudo apt install chromium\\n' + '\\n\\n sudo apt install chromium-browser\\n');\n  throw new Error();\n}\n/**\n * BrowserFetcher can download and manage different versions of Chromium and\n * Firefox.\n *\n * @remarks\n * BrowserFetcher operates on revision strings that specify a precise version of\n * Chromium, e.g. `\"533271\"`. Revision strings can be obtained from\n * {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}. For Firefox,\n * BrowserFetcher downloads Firefox Nightly and operates on version numbers such\n * as `\"75\"`.\n *\n * @remarks\n * The default constructed fetcher will always be for Chromium unless otherwise\n * specified.\n *\n * @remarks\n * BrowserFetcher is not designed to work concurrently with other instances of\n * BrowserFetcher that share the same downloads directory.\n *\n * @example\n * An example of using BrowserFetcher to download a specific version of Chromium\n * and running Puppeteer against it:\n *\n * ```ts\n * const browserFetcher = new BrowserFetcher();\n * const revisionInfo = await browserFetcher.download('533271');\n * const browser = await puppeteer.launch({\n *   executablePath: revisionInfo.executablePath,\n * });\n * ```\n *\n * @public\n */\nclass BrowserFetcher {\n  /**\n   * Constructs a browser fetcher for the given options.\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _BrowserFetcher_instances.add(this);\n    _BrowserFetcher_product.set(this, void 0);\n    _BrowserFetcher_downloadFolder.set(this, void 0);\n    _BrowserFetcher_downloadHost.set(this, void 0);\n    _BrowserFetcher_platform.set(this, void 0);\n    __classPrivateFieldSet(this, _BrowserFetcher_product, (options.product || 'chrome').toLowerCase(), \"f\");\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\") === 'chrome' || __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\") === 'firefox', `Unknown product: \"${options.product}\"`);\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadFolder, options.path || path.join(constants_js_1.PUPPETEER_CACHE_DIR, __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadHost, options.host || browserConfig[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")].host, \"f\");\n    if (options.platform) {\n      __classPrivateFieldSet(this, _BrowserFetcher_platform, options.platform, \"f\");\n    } else {\n      const platform = os.platform();\n      switch (platform) {\n        case 'darwin':\n          switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n            case 'chrome':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'arm64' && experimentalChromiumMacArm ? 'mac_arm' : 'mac', \"f\");\n              break;\n            case 'firefox':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, 'mac', \"f\");\n              break;\n          }\n          break;\n        case 'linux':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, 'linux', \"f\");\n          break;\n        case 'win32':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'x64' ||\n          // Windows 11 for ARM supports x64 emulation\n          os.arch() === 'arm64' && isWindows11(os.release()) ? 'win64' : 'win32', \"f\");\n          return;\n        default:\n          (0, assert_js_1.assert)(false, 'Unsupported platform: ' + platform);\n      }\n    }\n    (0, assert_js_1.assert)(downloadURLs[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")][__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")], 'Unsupported platform: ' + __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"));\n  }\n  /**\n   * @returns Returns the current `Platform`, which is one of `mac`, `linux`,\n   * `win32` or `win64`.\n   */\n  platform() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\");\n  }\n  /**\n   * @returns Returns the current `Product`, which is one of `chrome` or\n   * `firefox`.\n   */\n  product() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\");\n  }\n  /**\n   * @returns The download host being used.\n   */\n  host() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\");\n  }\n  /**\n   * Initiates a HEAD request to check if the revision is available.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to check availability for.\n   * @returns A promise that resolves to `true` if the revision could be downloaded\n   * from the host.\n   */\n  canDownload(revision) {\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    return new Promise(resolve => {\n      const request = httpRequest(url, 'HEAD', response => {\n        resolve(response.statusCode === 200);\n      }, false);\n      request.on('error', error => {\n        console.error(error);\n        resolve(false);\n      });\n    });\n  }\n  /**\n   * Initiates a GET request to download the revision from the host.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to download.\n   * @param progressCallback - A function that will be called with two arguments:\n   * How many bytes have been downloaded and the total number of bytes of the download.\n   * @returns A promise with revision information when the revision is downloaded\n   * and extracted.\n   */\n  async download(revision) {\n    let progressCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const fileName = url.split('/').pop();\n    (0, assert_js_1.assert)(fileName, `A malformed download URL was found: ${url}.`);\n    const archivePath = path.join(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), fileName);\n    const outputPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    if ((0, fs_1.existsSync)(outputPath)) {\n      return this.revisionInfo(revision);\n    }\n    if (!(0, fs_1.existsSync)(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"))) {\n      await (0, promises_1.mkdir)(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), {\n        recursive: true\n      });\n    }\n    // Use system Chromium builds on Linux ARM devices\n    if (os.platform() === 'linux' && os.arch() === 'arm64') {\n      handleArm64();\n      return;\n    }\n    try {\n      await _downloadFile(url, archivePath, progressCallback);\n      await install(archivePath, outputPath);\n    } finally {\n      if ((0, fs_1.existsSync)(archivePath)) {\n        await (0, promises_1.unlink)(archivePath);\n      }\n    }\n    const revisionInfo = this.revisionInfo(revision);\n    if (revisionInfo) {\n      await (0, promises_1.chmod)(revisionInfo.executablePath, 0o755);\n    }\n    return revisionInfo;\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @returns A promise with a list of all revision strings (for the current `product`)\n   * available locally on disk.\n   */\n  async localRevisions() {\n    if (!(0, fs_1.existsSync)(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"))) {\n      return [];\n    }\n    const fileNames = await (0, promises_1.readdir)(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"));\n    return fileNames.map(fileName => {\n      return parseFolderPath(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), fileName);\n    }).filter(entry => {\n      var _a;\n      return (_a = entry && entry.platform === __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) !== null && _a !== void 0 ? _a : false;\n    }).map(entry => {\n      return entry.revision;\n    });\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - A revision to remove for the current `product`.\n   * @returns A promise that resolves when the revision has been removes or\n   * throws if the revision has not been downloaded.\n   */\n  async remove(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    (0, assert_js_1.assert)((0, fs_1.existsSync)(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n    await new Promise(fulfill => {\n      return (0, rimraf_1.default)(folderPath, fulfill);\n    });\n  }\n  /**\n   * @param revision - The revision to get info for.\n   * @returns The revision info for the given revision.\n   */\n  revisionInfo(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    let executablePath = '';\n    switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n      case 'chrome':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome.exe');\n            break;\n        }\n        break;\n      case 'firefox':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, 'firefox', 'firefox');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, 'firefox', 'firefox.exe');\n            break;\n        }\n    }\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const local = (0, fs_1.existsSync)(folderPath);\n    debugFetcher({\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    });\n    return {\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    };\n  }\n}\nexports.BrowserFetcher = BrowserFetcher;\n_BrowserFetcher_product = new WeakMap(), _BrowserFetcher_downloadFolder = new WeakMap(), _BrowserFetcher_downloadHost = new WeakMap(), _BrowserFetcher_platform = new WeakMap(), _BrowserFetcher_instances = new WeakSet(), _BrowserFetcher_getFolderPath = function _BrowserFetcher_getFolderPath(revision) {\n  return path.resolve(__classPrivateFieldGet(this, _BrowserFetcher_downloadFolder, \"f\"), `${__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")}-${revision}`);\n};\nfunction parseFolderPath(product, folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2) {\n    return;\n  }\n  const [platform, revision] = splits;\n  if (!revision || !platform || !(platform in downloadURLs[product])) {\n    return;\n  }\n  return {\n    product,\n    platform,\n    revision\n  };\n}\n/**\n * Windows 11 is identified by 10.0.22000 or greater\n * @internal\n */\nfunction isWindows11(version) {\n  const parts = version.split('.');\n  if (parts.length > 2) {\n    const major = parseInt(parts[0], 10);\n    const minor = parseInt(parts[1], 10);\n    const patch = parseInt(parts[2], 10);\n    return major > 10 || major === 10 && minor > 0 || major === 10 && minor === 0 && patch >= 22000;\n  }\n  return false;\n}\n/**\n * @internal\n */\nfunction _downloadFile(url, destinationPath, progressCallback) {\n  debugFetcher(`Downloading binary from ${url}`);\n  let fulfill;\n  let reject;\n  const promise = new Promise((x, y) => {\n    fulfill = x;\n    reject = y;\n  });\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      reject(error);\n      return;\n    }\n    const file = (0, fs_1.createWriteStream)(destinationPath);\n    file.on('finish', () => {\n      return fulfill();\n    });\n    file.on('error', error => {\n      return reject(error);\n    });\n    response.pipe(file);\n    totalBytes = parseInt(response.headers['content-length'], 10);\n    if (progressCallback) {\n      response.on('data', onData);\n    }\n  });\n  request.on('error', error => {\n    return reject(error);\n  });\n  return promise;\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\nasync function install(archivePath, folderPath) {\n  debugFetcher(`Installing ${archivePath} to ${folderPath}`);\n  if (archivePath.endsWith('.zip')) {\n    await (0, extract_zip_1.default)(archivePath, {\n      dir: folderPath\n    });\n  } else if (archivePath.endsWith('.tar.bz2')) {\n    await extractTar(archivePath, folderPath);\n  } else if (archivePath.endsWith('.dmg')) {\n    await (0, promises_1.mkdir)(folderPath);\n    await installDMG(archivePath, folderPath);\n  } else {\n    throw new Error(`Unsupported archive format: ${archivePath}`);\n  }\n}\n/**\n * @internal\n */\nfunction extractTar(tarPath, folderPath) {\n  return new Promise((fulfill, reject) => {\n    const tarStream = tar_fs_1.default.extract(folderPath);\n    tarStream.on('error', reject);\n    tarStream.on('finish', fulfill);\n    const readStream = (0, fs_1.createReadStream)(tarPath);\n    readStream.pipe((0, unbzip2_stream_1.default)()).pipe(tarStream);\n  });\n}\n/**\n * @internal\n */\nasync function installDMG(dmgPath, folderPath) {\n  const {\n    stdout\n  } = await exec(`hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`);\n  const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n  if (!volumes) {\n    throw new Error(`Could not find volume path in ${stdout}`);\n  }\n  const mountPath = volumes[0];\n  try {\n    const fileNames = await (0, promises_1.readdir)(mountPath);\n    const appName = fileNames.find(item => {\n      return typeof item === 'string' && item.endsWith('.app');\n    });\n    if (!appName) {\n      throw new Error(`Cannot find app in ${mountPath}`);\n    }\n    const mountedPath = path.join(mountPath, appName);\n    debugFetcher(`Copying ${mountedPath} to ${folderPath}`);\n    await exec(`cp -R \"${mountedPath}\" \"${folderPath}\"`);\n  } finally {\n    debugFetcher(`Unmounting ${mountPath}`);\n    await exec(`hdiutil detach \"${mountPath}\" -quiet`);\n  }\n}\nfunction httpRequest(url, method, response) {\n  let keepAlive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const urlParsed = URL.parse(url);\n  let options = {\n    ...urlParsed,\n    method,\n    headers: keepAlive ? {\n      Connection: 'keep-alive'\n    } : undefined\n  };\n  const proxyURL = (0, proxy_from_env_1.getProxyForUrl)(url);\n  if (proxyURL) {\n    if (url.startsWith('http:')) {\n      const proxy = URL.parse(proxyURL);\n      options = {\n        path: options.href,\n        host: proxy.hostname,\n        port: proxy.port\n      };\n    } else {\n      const parsedProxyURL = URL.parse(proxyURL);\n      const proxyOptions = {\n        ...parsedProxyURL,\n        secureProxy: parsedProxyURL.protocol === 'https:'\n      };\n      options.agent = (0, https_proxy_agent_1.default)(proxyOptions);\n      options.rejectUnauthorized = false;\n    }\n  }\n  const requestCallback = res => {\n    if (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      httpRequest(res.headers.location, method, response);\n    } else {\n      response(res);\n    }\n  };\n  const request = options.protocol === 'https:' ? https.request(options, requestCallback) : http.request(options, requestCallback);\n  request.end();\n  return request;\n}","map":{"version":3,"mappings":"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","names":["experimentalChromiumMacArm","process","env","debugFetcher","downloadURLs","chrome","linux","mac","mac_arm","win32","win64","firefox","browserConfig","host","exec","child_process_1","archiveName","product","platform","revision","parseInt","downloadURL","url","util","format","handleArm64","exists","console","error","Error","BrowserFetcher","constructor","options","_BrowserFetcher_product","_BrowserFetcher_downloadFolder","_BrowserFetcher_downloadHost","_BrowserFetcher_platform","__classPrivateFieldSet","toLowerCase","__classPrivateFieldGet","path","join","constants_js_1","os","arch","isWindows11","release","canDownload","Promise","resolve","request","httpRequest","response","statusCode","on","download","progressCallback","fileName","split","pop","archivePath","outputPath","revisionInfo","recursive","_downloadFile","install","executablePath","localRevisions","fileNames","map","parseFolderPath","filter","entry","remove","folderPath","fulfill","local","exports","name","basename","splits","length","version","parts","major","minor","patch","destinationPath","reject","promise","x","y","downloadedBytes","totalBytes","resume","file","pipe","headers","onData","chunk","endsWith","dir","extractTar","installDMG","tarPath","tarStream","tar_fs_1","extract","readStream","dmgPath","stdout","volumes","match","mountPath","appName","find","item","mountedPath","method","keepAlive","urlParsed","URL","parse","Connection","undefined","proxyURL","startsWith","proxy","href","hostname","port","parsedProxyURL","proxyOptions","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","res","location","https","http","end"],"sources":["../../../../src/node/BrowserFetcher.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}