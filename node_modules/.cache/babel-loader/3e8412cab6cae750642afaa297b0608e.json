{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EmulationManager_client, _EmulationManager_emulatingMobile, _EmulationManager_hasTouch;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmulationManager = void 0;\n/**\n * @internal\n */\nclass EmulationManager {\n  constructor(client) {\n    _EmulationManager_client.set(this, void 0);\n    _EmulationManager_emulatingMobile.set(this, false);\n    _EmulationManager_hasTouch.set(this, false);\n    __classPrivateFieldSet(this, _EmulationManager_client, client, \"f\");\n  }\n  async emulateViewport(viewport) {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n    const screenOrientation = viewport.isLandscape ? {\n      angle: 90,\n      type: 'landscapePrimary'\n    } : {\n      angle: 0,\n      type: 'portraitPrimary'\n    };\n    const hasTouch = viewport.hasTouch || false;\n    await Promise.all([__classPrivateFieldGet(this, _EmulationManager_client, \"f\").send('Emulation.setDeviceMetricsOverride', {\n      mobile,\n      width,\n      height,\n      deviceScaleFactor,\n      screenOrientation\n    }), __classPrivateFieldGet(this, _EmulationManager_client, \"f\").send('Emulation.setTouchEmulationEnabled', {\n      enabled: hasTouch\n    })]);\n    const reloadNeeded = __classPrivateFieldGet(this, _EmulationManager_emulatingMobile, \"f\") !== mobile || __classPrivateFieldGet(this, _EmulationManager_hasTouch, \"f\") !== hasTouch;\n    __classPrivateFieldSet(this, _EmulationManager_emulatingMobile, mobile, \"f\");\n    __classPrivateFieldSet(this, _EmulationManager_hasTouch, hasTouch, \"f\");\n    return reloadNeeded;\n  }\n}\nexports.EmulationManager = EmulationManager;\n_EmulationManager_client = new WeakMap(), _EmulationManager_emulatingMobile = new WeakMap(), _EmulationManager_hasTouch = new WeakMap();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAmBA;;;AAGA,MAAaA,gBAAgB;EAK3BC,YAAYC,MAAkB;IAJ9BC;IACAC,4CAAmB,KAAK;IACxBC,qCAAY,KAAK;IAGfC,2BAAI,4BAAWJ,MAAM;EACvB;EAEA,MAAMK,eAAe,CAACC,QAAkB;IACtC,MAAMC,MAAM,GAAGD,QAAQ,CAACE,QAAQ,IAAI,KAAK;IACzC,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK;IAC5B,MAAMC,MAAM,GAAGJ,QAAQ,CAACI,MAAM;IAC9B,MAAMC,iBAAiB,GAAGL,QAAQ,CAACK,iBAAiB,IAAI,CAAC;IACzD,MAAMC,iBAAiB,GACrBN,QAAQ,CAACO,WAAW,GAChB;MAACC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAkB,CAAC,GACrC;MAACD,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAiB,CAAC;IACzC,MAAMC,QAAQ,GAAGV,QAAQ,CAACU,QAAQ,IAAI,KAAK;IAE3C,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBC,2BAAI,gCAAQ,CAACC,IAAI,CAAC,oCAAoC,EAAE;MACtDb,MAAM;MACNE,KAAK;MACLC,MAAM;MACNC,iBAAiB;MACjBC;KACD,CAAC,EACFO,2BAAI,gCAAQ,CAACC,IAAI,CAAC,oCAAoC,EAAE;MACtDC,OAAO,EAAEL;KACV,CAAC,CACH,CAAC;IAEF,MAAMM,YAAY,GAChBH,2BAAI,yCAAiB,KAAKZ,MAAM,IAAIY,2BAAI,kCAAU,KAAKH,QAAQ;IACjEZ,2BAAI,qCAAoBG,MAAM;IAC9BH,2BAAI,8BAAaY,QAAQ;IACzB,OAAOM,YAAY;EACrB;;AAtCFC","names":["EmulationManager","constructor","client","_EmulationManager_client","_EmulationManager_emulatingMobile","_EmulationManager_hasTouch","__classPrivateFieldSet","emulateViewport","viewport","mobile","isMobile","width","height","deviceScaleFactor","screenOrientation","isLandscape","angle","type","hasTouch","Promise","all","__classPrivateFieldGet","send","enabled","reloadNeeded","exports"],"sources":["../../../../src/common/EmulationManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}