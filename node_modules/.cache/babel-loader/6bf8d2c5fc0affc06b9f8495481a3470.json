{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ConsoleMessage_type, _ConsoleMessage_text, _ConsoleMessage_args, _ConsoleMessage_stackTraceLocations;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsoleMessage = void 0;\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nclass ConsoleMessage {\n  /**\n   * @public\n   */\n  constructor(type, text, args, stackTraceLocations) {\n    _ConsoleMessage_type.set(this, void 0);\n    _ConsoleMessage_text.set(this, void 0);\n    _ConsoleMessage_args.set(this, void 0);\n    _ConsoleMessage_stackTraceLocations.set(this, void 0);\n    __classPrivateFieldSet(this, _ConsoleMessage_type, type, \"f\");\n    __classPrivateFieldSet(this, _ConsoleMessage_text, text, \"f\");\n    __classPrivateFieldSet(this, _ConsoleMessage_args, args, \"f\");\n    __classPrivateFieldSet(this, _ConsoleMessage_stackTraceLocations, stackTraceLocations, \"f\");\n  }\n  /**\n   * @returns The type of the console message.\n   */\n  type() {\n    return __classPrivateFieldGet(this, _ConsoleMessage_type, \"f\");\n  }\n  /**\n   * @returns The text of the console message.\n   */\n  text() {\n    return __classPrivateFieldGet(this, _ConsoleMessage_text, \"f\");\n  }\n  /**\n   * @returns An array of arguments passed to the console.\n   */\n  args() {\n    return __classPrivateFieldGet(this, _ConsoleMessage_args, \"f\");\n  }\n  /**\n   * @returns The location of the console message.\n   */\n  location() {\n    var _a;\n    return (_a = __classPrivateFieldGet(this, _ConsoleMessage_stackTraceLocations, \"f\")[0]) !== null && _a !== void 0 ? _a : {};\n  }\n  /**\n   * @returns The array of locations on the stack of the console message.\n   */\n  stackTrace() {\n    return __classPrivateFieldGet(this, _ConsoleMessage_stackTraceLocations, \"f\");\n  }\n}\nexports.ConsoleMessage = ConsoleMessage;\n_ConsoleMessage_type = new WeakMap(), _ConsoleMessage_text = new WeakMap(), _ConsoleMessage_args = new WeakMap(), _ConsoleMessage_stackTraceLocations = new WeakMap();","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;;;AAIA,MAAaA,cAAc;EAMzB;;;EAGAC,YACEC,IAAwB,EACxBC,IAAY,EACZC,IAAgB,EAChBC,mBAA6C;IAZ/CC;IACAC;IACAC;IACAC;IAWEC,2BAAI,wBAASR,IAAI;IACjBQ,2BAAI,wBAASP,IAAI;IACjBO,2BAAI,wBAASN,IAAI;IACjBM,2BAAI,uCAAwBL,mBAAmB;EACjD;EAEA;;;EAGAH,IAAI;IACF,OAAOS,2BAAI,4BAAM;EACnB;EAEA;;;EAGAR,IAAI;IACF,OAAOQ,2BAAI,4BAAM;EACnB;EAEA;;;EAGAP,IAAI;IACF,OAAOO,2BAAI,4BAAM;EACnB;EAEA;;;EAGAC,QAAQ;;IACN,OAAO,iCAAI,2CAAqB,CAAC,CAAC,CAAC,mCAAI,EAAE;EAC3C;EAEA;;;EAGAC,UAAU;IACR,OAAOF,2BAAI,2CAAqB;EAClC;;AAtDFG","names":["ConsoleMessage","constructor","type","text","args","stackTraceLocations","_ConsoleMessage_type","_ConsoleMessage_text","_ConsoleMessage_args","_ConsoleMessage_stackTraceLocations","__classPrivateFieldSet","__classPrivateFieldGet","location","stackTrace","exports"],"sources":["../../../../src/common/ConsoleMessage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}