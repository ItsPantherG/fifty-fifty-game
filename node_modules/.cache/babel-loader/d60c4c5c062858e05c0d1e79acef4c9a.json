{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debug = exports.importDebug = void 0;\nconst environment_js_1 = require(\"../environment.js\");\n/**\n * @internal\n */\nlet debugModule = null;\n/**\n * @internal\n */\nasync function importDebug() {\n  if (!debugModule) {\n    debugModule = (await Promise.resolve().then(() => __importStar(require('debug')))).default;\n  }\n  return debugModule;\n}\nexports.importDebug = importDebug;\n/**\n * A debug function that can be used in any environment.\n *\n * @remarks\n * If used in Node, it falls back to the\n * {@link https://www.npmjs.com/package/debug | debug module}. In the browser it\n * uses `console.log`.\n *\n * In Node, use the `DEBUG` environment variable to control logging:\n *\n * ```\n * DEBUG=* // logs all channels\n * DEBUG=foo // logs the `foo` channel\n * DEBUG=foo* // logs any channels starting with `foo`\n * ```\n *\n * In the browser, set `window.__PUPPETEER_DEBUG` to a string:\n *\n * ```\n * window.__PUPPETEER_DEBUG='*'; // logs all channels\n * window.__PUPPETEER_DEBUG='foo'; // logs the `foo` channel\n * window.__PUPPETEER_DEBUG='foo*'; // logs any channels starting with `foo`\n * ```\n *\n * @example\n *\n * ```\n * const log = debug('Page');\n *\n * log('new page created')\n * // logs \"Page: new page created\"\n * ```\n *\n * @param prefix - this will be prefixed to each log.\n * @returns a function that can be called to log to that debug channel.\n *\n * @internal\n */\nconst debug = prefix => {\n  if (environment_js_1.isNode) {\n    return async function () {\n      for (var _len = arguments.length, logArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        logArgs[_key] = arguments[_key];\n      }\n      (await importDebug())(prefix)(logArgs);\n    };\n  }\n  return function () {\n    const debugLevel = globalThis.__PUPPETEER_DEBUG;\n    if (!debugLevel) {\n      return;\n    }\n    const everythingShouldBeLogged = debugLevel === '*';\n    const prefixMatchesDebugLevel = everythingShouldBeLogged || (\n    /**\n     * If the debug level is `foo*`, that means we match any prefix that\n     * starts with `foo`. If the level is `foo`, we match only the prefix\n     * `foo`.\n     */\n    debugLevel.endsWith('*') ? prefix.startsWith(debugLevel) : prefix === debugLevel);\n    if (!prefixMatchesDebugLevel) {\n      return;\n    }\n    // eslint-disable-next-line no-console\n    for (var _len2 = arguments.length, logArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      logArgs[_key2] = arguments[_key2];\n    }\n    console.log(`${prefix}:`, ...logArgs);\n  };\n};\nexports.debug = debug;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAOA;;;AAGA,IAAIA,WAAW,GAAkC,IAAI;AACrD;;;AAGO,eAAeC,WAAW;EAC/B,IAAI,CAACD,WAAW,EAAE;IAChBA,WAAW,GAAG,CAAC,wDAAa,OAAO,GAAC,EAAEE,OAAO;;EAE/C,OAAOF,WAAW;AACpB;AALAG;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCO,MAAMC,KAAK,GAAIC,MAAc,IAAoC;EACtE,IAAIC,uBAAM,EAAE;IACV,OAAO,kBAAgC;MAAA,kCAAtBC,OAAkB;QAAlBA,OAAkB;MAAA;MACjC,CAAC,MAAMN,WAAW,EAAE,EAAEI,MAAM,CAAC,CAACE,OAAO,CAAC;IACxC,CAAC;;EAGH,OAAO,YAAgC;IACrC,MAAMC,UAAU,GAAIC,UAAkB,CAACC,iBAAiB;IACxD,IAAI,CAACF,UAAU,EAAE;MACf;;IAGF,MAAMG,wBAAwB,GAAGH,UAAU,KAAK,GAAG;IAEnD,MAAMI,uBAAuB,GAC3BD,wBAAwB;IACxB;;;;;IAKCH,UAAU,CAACK,QAAQ,CAAC,GAAG,CAAC,GACrBR,MAAM,CAACS,UAAU,CAACN,UAAU,CAAC,GAC7BH,MAAM,KAAKG,UAAU,CAAC;IAE5B,IAAI,CAACI,uBAAuB,EAAE;MAC5B;;IAGF;IAAA,mCAvBSL,OAAkB;MAAlBA,OAAkB;IAAA;IAwB3BQ,OAAO,CAACC,GAAG,CAAC,GAAGX,MAAM,GAAG,EAAE,GAAGE,OAAO,CAAC;EACvC,CAAC;AACH,CAAC;AAjCYJ,aAAK","names":["debugModule","importDebug","default","exports","debug","prefix","environment_js_1","logArgs","debugLevel","globalThis","__PUPPETEER_DEBUG","everythingShouldBeLogged","prefixMatchesDebugLevel","endsWith","startsWith","console","log"],"sources":["../../../../src/common/Debug.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}