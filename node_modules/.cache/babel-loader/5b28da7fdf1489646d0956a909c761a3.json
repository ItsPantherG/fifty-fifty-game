{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Frame_url, _Frame_detached, _Frame_client;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Frame = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst IsolatedWorld_js_1 = require(\"./IsolatedWorld.js\");\nconst LifecycleWatcher_js_1 = require(\"./LifecycleWatcher.js\");\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * Represents a DOM frame.\n *\n * To understand frames, you can think of frames as `<iframe>` elements. Just\n * like iframes, frames can be nested, and when JavaScript is executed in a\n * frame, the JavaScript does not effect frames inside the ambient frame the\n * JavaScript executes in.\n *\n * @example\n * At any point in time, {@link Page | pages} expose their current frame\n * tree via the {@link Page.mainFrame} and {@link Frame.childFrames} methods.\n *\n * @example\n * An example of dumping frame tree:\n *\n * ```ts\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com/chrome/browser/canary.html');\n *   dumpFrameTree(page.mainFrame(), '');\n *   await browser.close();\n *\n *   function dumpFrameTree(frame, indent) {\n *     console.log(indent + frame.url());\n *     for (const child of frame.childFrames()) {\n *       dumpFrameTree(child, indent + '  ');\n *     }\n *   }\n * })();\n * ```\n *\n * @example\n * An example of getting text from an iframe element:\n *\n * ```ts\n * const frame = page.frames().find(frame => frame.name() === 'myframe');\n * const text = await frame.$eval('.selector', element => element.textContent);\n * console.log(text);\n * ```\n *\n * @remarks\n * Frame lifecycles are controlled by three events that are all dispatched on\n * the parent {@link Frame.page | page}:\n *\n * - {@link PageEmittedEvents.FrameAttached}\n * - {@link PageEmittedEvents.FrameNavigated}\n * - {@link PageEmittedEvents.FrameDetached}\n *\n * @public\n */\nclass Frame {\n  /**\n   * @internal\n   */\n  constructor(frameManager, frameId, parentFrameId, client) {\n    _Frame_url.set(this, '');\n    _Frame_detached.set(this, false);\n    _Frame_client.set(this, void 0);\n    /**\n     * @internal\n     */\n    this._loaderId = '';\n    /**\n     * @internal\n     */\n    this._hasStartedLoading = false;\n    /**\n     * @internal\n     */\n    this._lifecycleEvents = new Set();\n    this._frameManager = frameManager;\n    __classPrivateFieldSet(this, _Frame_url, '', \"f\");\n    this._id = frameId;\n    this._parentId = parentFrameId;\n    __classPrivateFieldSet(this, _Frame_detached, false, \"f\");\n    this._loaderId = '';\n    this.updateClient(client);\n  }\n  /**\n   * @internal\n   */\n  updateClient(client) {\n    __classPrivateFieldSet(this, _Frame_client, client, \"f\");\n    this.worlds = {\n      [IsolatedWorld_js_1.MAIN_WORLD]: new IsolatedWorld_js_1.IsolatedWorld(this),\n      [IsolatedWorld_js_1.PUPPETEER_WORLD]: new IsolatedWorld_js_1.IsolatedWorld(this)\n    };\n  }\n  /**\n   * @returns The page associated with the frame.\n   */\n  page() {\n    return this._frameManager.page();\n  }\n  /**\n   * @returns `true` if the frame is an out-of-process (OOP) frame. Otherwise,\n   * `false`.\n   */\n  isOOPFrame() {\n    return __classPrivateFieldGet(this, _Frame_client, \"f\") !== this._frameManager.client;\n  }\n  /**\n   * Navigates a frame to the given url.\n   *\n   * @remarks\n   * Navigation to `about:blank` or navigation to the same URL with a different\n   * hash will succeed and return `null`.\n   *\n   * :::warning\n   *\n   * Headless mode doesn't support navigation to a PDF document. See the {@link\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n   * issue}.\n   *\n   * :::\n   *\n   * @param url - the URL to navigate the frame to. This should include the\n   * scheme, e.g. `https://`.\n   * @param options - navigation options. `waitUntil` is useful to define when\n   * the navigation should be considered successful - see the docs for\n   * {@link PuppeteerLifeCycleEvent} for more details.\n   *\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @throws This method will throw an error if:\n   *\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the `timeout` is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * This method will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n   * Server Error\". The status code for such responses can be retrieved by\n   * calling {@link HTTPResponse.status}.\n   */\n  async goto(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout()\n    } = options;\n    let ensureNewDocumentNavigation = false;\n    const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    let error = await Promise.race([navigate(__classPrivateFieldGet(this, _Frame_client, \"f\"), url, referer, this._id), watcher.timeoutOrTerminationPromise()]);\n    if (!error) {\n      error = await Promise.race([watcher.timeoutOrTerminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n    }\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        if ((0, ErrorLike_js_1.isErrorLike)(error)) {\n          return error;\n        }\n        throw error;\n      }\n    }\n  }\n  /**\n   * Waits for the frame to navigate. It is useful for when you run code which\n   * will indirectly cause the frame to navigate.\n   *\n   * Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * @example\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   // The navigation promise resolves after navigation has finished\n   *   frame.waitForNavigation(),\n   *   // Clicking the link will indirectly cause a navigation\n   *   frame.click('a.my-link'),\n   * ]);\n   * ```\n   *\n   * @param options - options to configure when the navigation is consided\n   * finished.\n   * @returns a promise that resolves when the frame navigates to a new URL.\n   */\n  async waitForNavigation() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    const error = await Promise.race([watcher.timeoutOrTerminationPromise(), watcher.sameDocumentNavigationPromise(), watcher.newDocumentNavigationPromise()]);\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n  }\n  /**\n   * @internal\n   */\n  _client() {\n    return __classPrivateFieldGet(this, _Frame_client, \"f\");\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].executionContext();\n  }\n  /**\n   * Behaves identically to {@link Page.evaluateHandle} except it's run within\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluateHandle} for details.\n   */\n  async evaluateHandle(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * Behaves identically to {@link Page.evaluate} except it's run within the\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluate} for details.\n   */\n  async evaluate(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].evaluate(pageFunction, ...args);\n  }\n  /**\n   * Queries the frame for an element matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns A {@link ElementHandle | element handle} to the first element\n   * matching the given selector. Otherwise, `null`.\n   */\n  async $(selector) {\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].$(selector);\n  }\n  /**\n   * Queries the frame for all elements matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns An array of {@link ElementHandle | element handles} that point to\n   * elements matching the given selector.\n   */\n  async $$(selector) {\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].$$(selector);\n  }\n  /**\n   * Runs the given function on the first element matching the given selector in\n   * the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const searchValue = await frame.$eval('#search', el => el.value);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * The first element matching the selector will be passed to the function as\n   * its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $eval(selector, pageFunction) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * Runs the given function on an array of elements matching the given selector\n   * in the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```js\n   * const divsCounts = await frame.$$eval('div', divs => divs.length);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * An array of elements matching the given selector will be passed to the\n   * function as its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $$eval(selector, pageFunction) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      args[_key4 - 2] = arguments[_key4];\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].$$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @deprecated Use {@link Frame.$$} with the `xpath` prefix.\n   *\n   * Example: `await frame.$$('xpath/' + xpathExpression)`\n   *\n   * This method evaluates the given XPath expression and returns the results.\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   * @param expression - the XPath expression to evaluate.\n   */\n  async $x(expression) {\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].$x(expression);\n  }\n  /**\n   * Waits for an element matching the given selector to appear in the frame.\n   *\n   * This method works across navigations.\n   *\n   * @example\n   *\n   * ```ts\n   * const puppeteer = require('puppeteer');\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .mainFrame()\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - The selector to query and wait for.\n   * @param options - Options for customizing waiting behavior.\n   * @returns An element matching the given selector.\n   * @throws Throws if an element matching the given selector doesn't appear.\n   */\n  async waitForSelector(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      updatedSelector,\n      queryHandler\n    } = (0, QueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    (0, assert_js_1.assert)(queryHandler.waitFor, 'Query handler does not support waiting');\n    return await queryHandler.waitFor(this, updatedSelector, options);\n  }\n  /**\n   * @deprecated Use {@link Frame.waitForSelector} with the `xpath` prefix.\n   *\n   * Example: `await frame.waitForSelector('xpath/' + xpathExpression)`\n   *\n   * The method evaluates the XPath expression relative to the Frame.\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   *\n   * Wait for the `xpath` to appear in page. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the xpath doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * For a code example, see the example for {@link Frame.waitForSelector}. That\n   * function behaves identically other than taking a CSS selector rather than\n   * an XPath.\n   *\n   * @param xpath - the XPath expression to wait for.\n   * @param options - options to configure the visiblity of the element and how\n   * long to wait before timing out.\n   */\n  async waitForXPath(xpath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (xpath.startsWith('//')) {\n      xpath = `.${xpath}`;\n    }\n    return this.waitForSelector(`xpath/${xpath}`, options);\n  }\n  /**\n   * @example\n   * The `waitForFunction` can be used to observe viewport size change:\n   *\n   * ```ts\n   * const puppeteer = require('puppeteer');\n   *\n   * (async () => {\n   * .  const browser = await puppeteer.launch();\n   * .  const page = await browser.newPage();\n   * .  const watchDog = page.mainFrame().waitForFunction('window.innerWidth < 100');\n   * .  page.setViewport({width: 50, height: 50});\n   * .  await watchDog;\n   * .  await browser.close();\n   * })();\n   * ```\n   *\n   * To pass arguments from Node.js to the predicate of `page.waitForFunction` function:\n   *\n   * ```ts\n   * const selector = '.foo';\n   * await frame.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {}, // empty options object\n   *   selector\n   * );\n   * ```\n   *\n   * @param pageFunction - the function to evaluate in the frame context.\n   * @param options - options to configure the polling method and timeout.\n   * @param args - arguments to pass to the `pageFunction`.\n   * @returns the promise which resolve when the `pageFunction` returns a truthy value.\n   */\n  waitForFunction(pageFunction) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (var _len5 = arguments.length, args = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n      args[_key5 - 2] = arguments[_key5];\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].waitForFunction(pageFunction, options, ...args);\n  }\n  /**\n   * @returns The full HTML contents of the frame, including the DOCTYPE.\n   */\n  async content() {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].content();\n  }\n  /**\n   * Set the content of the frame.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - Options to configure how long before timing out and at\n   * what point to consider the content setting successful.\n   */\n  async setContent(html) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].setContent(html, options);\n  }\n  /**\n   * @returns The frame's `name` attribute as specified in the tag.\n   *\n   * @remarks\n   * If the name is empty, it returns the `id` attribute instead.\n   *\n   * @remarks\n   * This value is calculated once when the frame is created, and will not\n   * update if the attribute is changed later.\n   */\n  name() {\n    return this._name || '';\n  }\n  /**\n   * @returns The frame's URL.\n   */\n  url() {\n    return __classPrivateFieldGet(this, _Frame_url, \"f\");\n  }\n  /**\n   * @returns The parent frame, if any. Detached and main frames return `null`.\n   */\n  parentFrame() {\n    return this._frameManager._frameTree.parentFrame(this._id) || null;\n  }\n  /**\n   * @returns An array of child frames.\n   */\n  childFrames() {\n    return this._frameManager._frameTree.childFrames(this._id);\n  }\n  /**\n   * @returns `true` if the frame has been detached. Otherwise, `false`.\n   */\n  isDetached() {\n    return __classPrivateFieldGet(this, _Frame_detached, \"f\");\n  }\n  /**\n   * Adds a `<script>` tag into the page with the desired url or content.\n   *\n   * @param options - Options for the script.\n   * @returns An {@link ElementHandle | element handle} to the injected\n   * `<script>` element.\n   */\n  async addScriptTag(options) {\n    let {\n      content = '',\n      type\n    } = options;\n    const {\n      path\n    } = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error('Exactly one of `url`, `path`, or `content` must be specified.');\n    }\n    if (path) {\n      let fs;\n      try {\n        fs = (await Promise.resolve().then(() => __importStar(require('fs')))).promises;\n      } catch (error) {\n        if (error instanceof TypeError) {\n          throw new Error('Can only pass a file path in a Node-like environment.');\n        }\n        throw error;\n      }\n      content = await fs.readFile(path, 'utf8');\n      content += `//# sourceURL=${path.replace(/\\n/g, '')}`;\n    }\n    type = type !== null && type !== void 0 ? type : 'text/javascript';\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].transferHandle(await this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].evaluateHandle(async (_ref, _ref2) => {\n      let {\n        createDeferredPromise\n      } = _ref;\n      let {\n        url,\n        id,\n        type,\n        content\n      } = _ref2;\n      const promise = createDeferredPromise();\n      const script = document.createElement('script');\n      script.type = type;\n      script.text = content;\n      if (url) {\n        script.src = url;\n        script.addEventListener('load', () => {\n          return promise.resolve();\n        }, {\n          once: true\n        });\n        script.addEventListener('error', event => {\n          var _a;\n          promise.reject(new Error((_a = event.message) !== null && _a !== void 0 ? _a : 'Could not load script'));\n        }, {\n          once: true\n        });\n      } else {\n        promise.resolve();\n      }\n      if (id) {\n        script.id = id;\n      }\n      document.head.appendChild(script);\n      await promise;\n      return script;\n    }, await this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].puppeteerUtil, {\n      ...options,\n      type,\n      content\n    }));\n  }\n  async addStyleTag(options) {\n    let {\n      content = ''\n    } = options;\n    const {\n      path\n    } = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error('Exactly one of `url`, `path`, or `content` must be specified.');\n    }\n    if (path) {\n      let fs;\n      try {\n        fs = (await (0, util_js_1.importFS)()).promises;\n      } catch (error) {\n        if (error instanceof TypeError) {\n          throw new Error('Can only pass a file path in a Node-like environment.');\n        }\n        throw error;\n      }\n      content = await fs.readFile(path, 'utf8');\n      content += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      options.content = content;\n    }\n    return this.worlds[IsolatedWorld_js_1.MAIN_WORLD].transferHandle(await this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].evaluateHandle(async (_ref3, _ref4) => {\n      let {\n        createDeferredPromise\n      } = _ref3;\n      let {\n        url,\n        content\n      } = _ref4;\n      const promise = createDeferredPromise();\n      let element;\n      if (!url) {\n        element = document.createElement('style');\n        element.appendChild(document.createTextNode(content));\n      } else {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = url;\n        element = link;\n      }\n      element.addEventListener('load', () => {\n        promise.resolve();\n      }, {\n        once: true\n      });\n      element.addEventListener('error', event => {\n        var _a;\n        promise.reject(new Error((_a = event.message) !== null && _a !== void 0 ? _a : 'Could not load style'));\n      }, {\n        once: true\n      });\n      document.head.appendChild(element);\n      await promise;\n      return element;\n    }, await this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].puppeteerUtil, options));\n  }\n  /**\n   * Clicks the first element found that matches `selector`.\n   *\n   * @remarks\n   * If `click()` triggers a navigation event and there's a separate\n   * `page.waitForNavigation()` promise to be resolved, you may end up with a\n   * race condition that yields unexpected results. The correct pattern for\n   * click and wait for navigation is the following:\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   frame.click(selector, clickOptions),\n   * ]);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   */\n  async click(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].click(selector, options);\n  }\n  /**\n   * Focuses the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  async focus(selector) {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].focus(selector);\n  }\n  /**\n   * Hovers the pointer over the center of the first element that matches the\n   * `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  async hover(selector) {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].hover(selector);\n  }\n  /**\n   * Selects a set of value on the first `<select>` element that matches the\n   * `selector`.\n   *\n   * @example\n   *\n   * ```ts\n   * frame.select('select#colors', 'blue'); // single selection\n   * frame.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param values - The array of values to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   * @returns the list of values that were successfully selected.\n   * @throws Throws if there's no `<select>` matching `selector`.\n   */\n  select(selector) {\n    for (var _len6 = arguments.length, values = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      values[_key6 - 1] = arguments[_key6];\n    }\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].select(selector, ...values);\n  }\n  /**\n   * Taps the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  async tap(selector) {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].tap(selector);\n  }\n  /**\n   * Sends a `keydown`, `keypress`/`input`, and `keyup` event for each character\n   * in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`, use\n   * {@link Keyboard.press}.\n   *\n   * @example\n   *\n   * ```ts\n   * await frame.type('#mytextarea', 'Hello'); // Types instantly\n   * await frame.type('#mytextarea', 'World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param selector - the selector for the element to type into. If there are\n   * multiple the first will be used.\n   * @param text - text to type into the element\n   * @param options - takes one option, `delay`, which sets the time to wait\n   * between key presses in milliseconds. Defaults to `0`.\n   */\n  async type(selector, text, options) {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].type(selector, text, options);\n  }\n  /**\n   * @deprecated Replace with `new Promise(r => setTimeout(r, milliseconds));`.\n   *\n   * Causes your script to wait for the given number of milliseconds.\n   *\n   * @remarks\n   * It's generally recommended to not wait for a number of seconds, but instead\n   * use {@link Frame.waitForSelector}, {@link Frame.waitForXPath} or\n   * {@link Frame.waitForFunction} to wait for exactly the conditions you want.\n   *\n   * @example\n   *\n   * Wait for 1 second:\n   *\n   * ```ts\n   * await frame.waitForTimeout(1000);\n   * ```\n   *\n   * @param milliseconds - the number of milliseconds to wait.\n   */\n  waitForTimeout(milliseconds) {\n    return new Promise(resolve => {\n      setTimeout(resolve, milliseconds);\n    });\n  }\n  /**\n   * @returns the frame's title.\n   */\n  async title() {\n    return this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD].title();\n  }\n  /**\n   * @internal\n   */\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    __classPrivateFieldSet(this, _Frame_url, `${framePayload.url}${framePayload.urlFragment || ''}`, \"f\");\n  }\n  /**\n   * @internal\n   */\n  _navigatedWithinDocument(url) {\n    __classPrivateFieldSet(this, _Frame_url, url, \"f\");\n  }\n  /**\n   * @internal\n   */\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n  /**\n   * @internal\n   */\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n  /**\n   * @internal\n   */\n  _onLoadingStarted() {\n    this._hasStartedLoading = true;\n  }\n  /**\n   * @internal\n   */\n  _detach() {\n    __classPrivateFieldSet(this, _Frame_detached, true, \"f\");\n    this.worlds[IsolatedWorld_js_1.MAIN_WORLD]._detach();\n    this.worlds[IsolatedWorld_js_1.PUPPETEER_WORLD]._detach();\n  }\n}\nexports.Frame = Frame;\n_Frame_url = new WeakMap(), _Frame_detached = new WeakMap(), _Frame_client = new WeakMap();","map":{"version":3,"mappings":"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","names":["Frame","constructor","frameManager","frameId","parentFrameId","client","_Frame_url","_Frame_detached","_Frame_client","Set","_frameManager","__classPrivateFieldSet","_id","_parentId","_loaderId","updateClient","worlds","IsolatedWorld_js_1","page","isOOPFrame","__classPrivateFieldGet","goto","url","options","referer","networkManager","extraHTTPHeaders","waitUntil","timeout","timeoutSettings","navigationTimeout","ensureNewDocumentNavigation","watcher","LifecycleWatcher_js_1","error","Promise","race","navigate","timeoutOrTerminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","navigationResponse","dispose","referrer","response","send","loaderId","errorText","Error","waitForNavigation","_client","executionContext","evaluateHandle","pageFunction","args","evaluate","$","selector","$$","$eval","$$eval","$x","expression","waitForSelector","updatedSelector","queryHandler","waitFor","waitForXPath","xpath","startsWith","waitForFunction","content","setContent","html","name","_name","parentFrame","_frameTree","childFrames","isDetached","addScriptTag","type","path","fs","promises","TypeError","readFile","replace","transferHandle","createDeferredPromise","id","promise","script","document","createElement","text","src","addEventListener","resolve","once","event","reject","message","head","appendChild","puppeteerUtil","addStyleTag","element","createTextNode","link","rel","href","click","focus","hover","select","values","tap","waitForTimeout","milliseconds","setTimeout","title","_navigated","framePayload","urlFragment","_navigatedWithinDocument","_onLifecycleEvent","_lifecycleEvents","clear","add","_onLoadingStopped","_onLoadingStarted","_hasStartedLoading","_detach","exports"],"sources":["../../../../src/common/Frame.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}