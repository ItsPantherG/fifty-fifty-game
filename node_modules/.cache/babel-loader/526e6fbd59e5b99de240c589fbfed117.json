{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FirefoxTargetManager_instances, _FirefoxTargetManager_connection, _FirefoxTargetManager_discoveredTargetsByTargetId, _FirefoxTargetManager_availableTargetsByTargetId, _FirefoxTargetManager_availableTargetsBySessionId, _FirefoxTargetManager_ignoredTargets, _FirefoxTargetManager_targetFilterCallback, _FirefoxTargetManager_targetFactory, _FirefoxTargetManager_targetInterceptors, _FirefoxTargetManager_attachedToTargetListenersBySession, _FirefoxTargetManager_initializeCallback, _FirefoxTargetManager_initializePromise, _FirefoxTargetManager_targetsIdsForInit, _FirefoxTargetManager_onSessionDetached, _FirefoxTargetManager_onTargetCreated, _FirefoxTargetManager_onTargetDestroyed, _FirefoxTargetManager_onAttachedToTarget, _FirefoxTargetManager_finishInitializationIfReady;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirefoxTargetManager = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n/**\n * FirefoxTargetManager implements target management using\n * `Target.setDiscoverTargets` without using auto-attach. It, therefore, creates\n * targets that lazily establish their CDP sessions.\n *\n * Although the approach is potentially flaky, there is no other way for Firefox\n * because Firefox's CDP implementation does not support auto-attach.\n *\n * Firefox does not support targetInfoChanged and detachedFromTarget events:\n *\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1610855\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1636979\n *   @internal\n */\nclass FirefoxTargetManager extends EventEmitter_js_1.EventEmitter {\n  constructor(connection, targetFactory, targetFilterCallback) {\n    super();\n    _FirefoxTargetManager_instances.add(this);\n    _FirefoxTargetManager_connection.set(this, void 0);\n    /**\n     * Keeps track of the following events: 'Target.targetCreated',\n     * 'Target.targetDestroyed'.\n     *\n     * A target becomes discovered when 'Target.targetCreated' is received.\n     * A target is removed from this map once 'Target.targetDestroyed' is\n     * received.\n     *\n     * `targetFilterCallback` has no effect on this map.\n     */\n    _FirefoxTargetManager_discoveredTargetsByTargetId.set(this, new Map());\n    /**\n     * Keeps track of targets that were created via 'Target.targetCreated'\n     * and which one are not filtered out by `targetFilterCallback`.\n     *\n     * The target is removed from here once it's been destroyed.\n     */\n    _FirefoxTargetManager_availableTargetsByTargetId.set(this, new Map());\n    /**\n     * Tracks which sessions attach to which target.\n     */\n    _FirefoxTargetManager_availableTargetsBySessionId.set(this, new Map());\n    /**\n     * If a target was filtered out by `targetFilterCallback`, we still receive\n     * events about it from CDP, but we don't forward them to the rest of Puppeteer.\n     */\n    _FirefoxTargetManager_ignoredTargets.set(this, new Set());\n    _FirefoxTargetManager_targetFilterCallback.set(this, void 0);\n    _FirefoxTargetManager_targetFactory.set(this, void 0);\n    _FirefoxTargetManager_targetInterceptors.set(this, new WeakMap());\n    _FirefoxTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());\n    _FirefoxTargetManager_initializeCallback.set(this, () => {});\n    _FirefoxTargetManager_initializePromise.set(this, new Promise(resolve => {\n      __classPrivateFieldSet(this, _FirefoxTargetManager_initializeCallback, resolve, \"f\");\n    }));\n    _FirefoxTargetManager_targetsIdsForInit.set(this, new Set());\n    _FirefoxTargetManager_onSessionDetached.set(this, session => {\n      this.removeSessionListeners(session);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").delete(session);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").delete(session.id());\n    });\n    _FirefoxTargetManager_onTargetCreated.set(this, async event => {\n      if (__classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").has(event.targetInfo.targetId)) {\n        return;\n      }\n      __classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").set(event.targetInfo.targetId, event.targetInfo);\n      if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {\n        const target = __classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, \"f\").call(this, event.targetInfo, undefined);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);\n        return;\n      }\n      if (__classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, \"f\") && !__classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, \"f\").call(this, event.targetInfo)) {\n        __classPrivateFieldGet(this, _FirefoxTargetManager_ignoredTargets, \"f\").add(event.targetInfo.targetId);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetInfo.targetId);\n        return;\n      }\n      const target = __classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, \"f\").call(this, event.targetInfo, undefined);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n      this.emit(\"targetAvailable\" /* TargetManagerEmittedEvents.TargetAvailable */, target);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);\n    });\n    _FirefoxTargetManager_onTargetDestroyed.set(this, event => {\n      __classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").delete(event.targetId);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetId);\n      const target = __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(event.targetId);\n      if (target) {\n        this.emit(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, target);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").delete(event.targetId);\n      }\n    });\n    _FirefoxTargetManager_onAttachedToTarget.set(this, async (parentSession, event) => {\n      const targetInfo = event.targetInfo;\n      const session = __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").session(event.sessionId);\n      if (!session) {\n        throw new Error(`Session ${event.sessionId} was not created.`);\n      }\n      const target = __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId);\n      (0, assert_js_1.assert)(target, `Target ${targetInfo.targetId} is missing`);\n      this.setupAttachmentListeners(session);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").set(session.id(), __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId));\n      for (const hook of __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(parentSession) || []) {\n        if (!(parentSession instanceof Connection_js_1.Connection)) {\n          (0, assert_js_1.assert)(__classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").has(parentSession.id()));\n        }\n        await hook(target, parentSession instanceof Connection_js_1.Connection ? null : __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").get(parentSession.id()));\n      }\n    });\n    __classPrivateFieldSet(this, _FirefoxTargetManager_connection, connection, \"f\");\n    __classPrivateFieldSet(this, _FirefoxTargetManager_targetFilterCallback, targetFilterCallback, \"f\");\n    __classPrivateFieldSet(this, _FirefoxTargetManager_targetFactory, targetFactory, \"f\");\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('sessiondetached', __classPrivateFieldGet(this, _FirefoxTargetManager_onSessionDetached, \"f\"));\n    this.setupAttachmentListeners(__classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\"));\n  }\n  addTargetInterceptor(client, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n    interceptors.push(interceptor);\n    __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors);\n  }\n  removeTargetInterceptor(client, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n    __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors.filter(currentInterceptor => {\n      return currentInterceptor !== interceptor;\n    }));\n  }\n  setupAttachmentListeners(session) {\n    const listener = event => {\n      return __classPrivateFieldGet(this, _FirefoxTargetManager_onAttachedToTarget, \"f\").call(this, session, event);\n    };\n    (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").set(session, listener);\n    session.on('Target.attachedToTarget', listener);\n  }\n  removeSessionListeners(session) {\n    if (__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session)) {\n      session.off('Target.attachedToTarget', __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").get(session));\n      __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").delete(session);\n    }\n  }\n  getAvailableTargets() {\n    return __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\");\n  }\n  dispose() {\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n  }\n  async initialize() {\n    await __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").send('Target.setDiscoverTargets', {\n      discover: true\n    });\n    __classPrivateFieldSet(this, _FirefoxTargetManager_targetsIdsForInit, new Set(__classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").keys()), \"f\");\n    await __classPrivateFieldGet(this, _FirefoxTargetManager_initializePromise, \"f\");\n  }\n}\nexports.FirefoxTargetManager = FirefoxTargetManager;\n_FirefoxTargetManager_connection = new WeakMap(), _FirefoxTargetManager_discoveredTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsBySessionId = new WeakMap(), _FirefoxTargetManager_ignoredTargets = new WeakMap(), _FirefoxTargetManager_targetFilterCallback = new WeakMap(), _FirefoxTargetManager_targetFactory = new WeakMap(), _FirefoxTargetManager_targetInterceptors = new WeakMap(), _FirefoxTargetManager_attachedToTargetListenersBySession = new WeakMap(), _FirefoxTargetManager_initializeCallback = new WeakMap(), _FirefoxTargetManager_initializePromise = new WeakMap(), _FirefoxTargetManager_targetsIdsForInit = new WeakMap(), _FirefoxTargetManager_onSessionDetached = new WeakMap(), _FirefoxTargetManager_onTargetCreated = new WeakMap(), _FirefoxTargetManager_onTargetDestroyed = new WeakMap(), _FirefoxTargetManager_onAttachedToTarget = new WeakMap(), _FirefoxTargetManager_instances = new WeakSet(), _FirefoxTargetManager_finishInitializationIfReady = function _FirefoxTargetManager_finishInitializationIfReady(targetId) {\n  __classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").delete(targetId);\n  if (__classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").size === 0) {\n    __classPrivateFieldGet(this, _FirefoxTargetManager_initializeCallback, \"f\").call(this);\n  }\n};","map":{"version":3,"mappings":"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","names":["FirefoxTargetManager","EventEmitter_js_1","constructor","connection","targetFactory","targetFilterCallback","_FirefoxTargetManager_connection","_FirefoxTargetManager_discoveredTargetsByTargetId","Map","_FirefoxTargetManager_availableTargetsByTargetId","_FirefoxTargetManager_availableTargetsBySessionId","_FirefoxTargetManager_ignoredTargets","Set","_FirefoxTargetManager_targetFilterCallback","_FirefoxTargetManager_targetFactory","_FirefoxTargetManager_targetInterceptors","WeakMap","_FirefoxTargetManager_attachedToTargetListenersBySession","_FirefoxTargetManager_initializeCallback","_FirefoxTargetManager_initializePromise","Promise","resolve","__classPrivateFieldSet","_FirefoxTargetManager_targetsIdsForInit","_FirefoxTargetManager_onSessionDetached","session","removeSessionListeners","__classPrivateFieldGet","delete","id","_FirefoxTargetManager_onTargetCreated","event","has","targetInfo","targetId","set","type","attached","target","undefined","_targetId","add","emit","_FirefoxTargetManager_onTargetDestroyed","get","_FirefoxTargetManager_onAttachedToTarget","parentSession","sessionId","Error","setupAttachmentListeners","hook","Connection_js_1","on","addTargetInterceptor","client","interceptor","interceptors","push","removeTargetInterceptor","filter","currentInterceptor","listener","off","getAvailableTargets","dispose","initialize","send","discover","keys","exports","size"],"sources":["../../../../src/common/FirefoxTargetManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}